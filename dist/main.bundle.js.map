{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/edit-profile/edit-profile.component.css","./src/app/edit-profile/edit-profile.component.html","./src/app/edit-profile/edit-profile.component.ts","./src/app/fit/fit.component.css","./src/app/fit/fit.component.html","./src/app/fit/fit.component.ts","./src/app/history/history.component.css","./src/app/history/history.component.html","./src/app/history/history.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/messages/messages.component.css","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/nav/nav.component.css","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/profile/profile.component.css","./src/app/profile/profile.component.html","./src/app/profile/profile.component.ts","./src/app/services/fit.service.ts","./src/app/services/messages.service.ts","./src/app/share/share.component.css","./src/app/share/share.component.html","./src/app/share/share.component.ts","./src/app/sign-up/sign-up.component.css","./src/app/sign-up/sign-up.component.html","./src/app/sign-up/sign-up.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-nav></app-nav> <!-- Navigation Bar -->\\n<div class = \\\"container\\\">\\n  <app-messages></app-messages> <!-- Messages -->\\n  <router-outlet></router-outlet>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { HomeComponent } from './home/home.component';\nimport { FitComponent } from './fit/fit.component';\nimport { MessagesService } from './services/messages.service';\nimport { FitService } from './services/fit.service';\nimport { ShareComponent } from './share/share.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { HistoryComponent } from './history/history.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    MessagesComponent,\n    HomeComponent,\n    FitComponent,\n    ShareComponent,\n    LoginComponent,\n    SignUpComponent,\n    ProfileComponent,\n    EditProfileComponent,\n    HistoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule.forRoot(),\n    RouterModule.forRoot([\n        { path: 'home', component: HomeComponent },\n        { path: 'fit', component: FitComponent },\n        { path: 'share', component: ShareComponent },\n        { path: 'login', component: LoginComponent },\n        { path: 'sign-up', component: SignUpComponent },\n        { path: 'profile', component: ProfileComponent },\n        { path: 'editProfile', component: EditProfileComponent },\n        { path: 'history', component: HistoryComponent },\n        { path: '', redirectTo: '/home', pathMatch: 'full'}\n\n    ])\n  ],\n  providers: [MessagesService, FitService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\\n.btn-own{\\n    margin: 15px;\\n    color: white;\\n    background-color: #F4C3D8;\\n    border: none;\\n}\\n\\n.card{\\n    margin: 10px;\\n    color: #1C5F93;\\n}\\n\\n.card-header-own{\\n    background-color: #7CACEA;\\n    height: 120px;\\n    text-align: center;\\n    border: none;\\n    padding: 1.7rem 0;\\n    font-size: 30px;\\n    color: white;\\n    \\n    \\n}\\n\\nform{\\n    padding: 1rem;\\n}\\n\\n.text-uppercase-own{\\n    text-transform: uppercase;\\n    font-size: 12px;\\n    color: white;\\n}\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit-profile/edit-profile.component.css\n// module id = ./src/app/edit-profile/edit-profile.component.css\n// module chunks = main","module.exports = \"<!-- Editing user's profile -->\\n<div class=\\\"card\\\" >\\n    <div class=\\\"card-header-own\\\">\\n        <div class=\\\" text-uppercase\\\">\\n            {{Me.Name}}'s Profile\\n        </div>\\n        <div class=\\\"text-uppercase-own\\\">Edit your profile or set your new goal</div> \\n    </div> <!-- card header -->\\n    \\n    <div class=\\\"card-body\\\">\\n        <form>\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label for=\\\"inputName\\\">Name</label>\\n                    <input #name type=\\\"text\\\" readonly class=\\\"form-control\\\" id=\\\"inputName\\\" [value]=\\\"Me.Name\\\">\\n                </div>\\n            \\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label for=\\\"inputAge\\\">Age</label>\\n                    <input #age type=\\\"number\\\" min=\\\"1\\\" max=\\\"150\\\" class=\\\"form-control\\\" id=\\\"inputAge\\\" [value]=\\\"Me.Profile.Age\\\" placeholder=\\\"Age\\\">\\n                </div>\\n            </div>\\n        \\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"Height\\\">Height</label>\\n                <input #height type=\\\"number\\\" min=\\\"90\\\" max=\\\"350\\\"  class=\\\"form-control\\\" id=\\\"Height\\\" [value]=\\\"Me.Profile.Height\\\" placeholder=\\\"cm\\\">\\n            </div>\\n        \\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"Weight\\\">Weight</label>\\n                <input #weight type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" id=\\\"Weight\\\" [value]=\\\"Me.Profile.Weight\\\" placeholder=\\\"kg\\\">\\n            </div>\\n        \\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"inputGoalWeight\\\">Goal Weight</label>\\n                <input #goalWeight type=\\\"number\\\" min =\\\"0\\\" class=\\\"form-control\\\" id=\\\"inputGoalWeight\\\" [value]=\\\"Me.Profile.GoalWeight\\\" placeholder=\\\"kg\\\">\\n            </div>\\n        </form>\\n        <div>\\n            <button class=\\\"btn btn-primary btn-sm btn-own\\\" (click)=\\\"editing(age.value, weight.value, height.value, goalWeight.value, name.value)\\\">Edit</button>\\n        </div> \\n    </div><!-- card body-->\\n</div>  <!-- card -->\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit-profile/edit-profile.component.html\n// module id = ./src/app/edit-profile/edit-profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FitService } from '../services/fit.service';\nimport { Fit, User } from '../models/exercise';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n  Me: User;\n\n  constructor(private _Fit: FitService, private _Router: Router) {\n    this.Me = this._Fit.Me;\n    if(!this.Me){\n      _Router.navigate(['/login']);\n    }\n\n   }\n\n  ngOnInit() {\n  }\n\n  editing(age: number, weight: number, height: number, goalWeight: number, name: string ){\n    const goalBmi = this.calculateBMI(goalWeight, height);\n    const bmi = this.calculateBMI(weight, height);\n    this._Fit.profileAdd(age, weight, height, goalWeight, bmi, goalBmi, name);\n  \n  \n  }\n  calculateBMI(weight: number, height: number){\n    return Math.round((weight / height / height * 10000) * 100) / 100;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/edit-profile/edit-profile.component.ts","module.exports = \"ul{\\n    list-style-type: none;\\n    margin: 10px;\\n}\\n\\n.card{\\n    margin: 10px;\\n    color: #1C5F93;\\n}\\n\\n.card-header-own{\\n    background-color: #7CACEA;\\n    text-align: center;\\n    border: none;\\n    padding: 1.7rem 0.5rem;\\n    font-size: 30px;\\n    color: white;\\n}\\n\\nform{\\n    padding: 1rem;\\n}\\n\\n.subtitle{\\n    font-size: 15px;\\n    margin: 1px;\\n    margin-bottom: 3px;\\n    font-weight: 300;\\n    padding: 0.2rem;\\n    \\n}\\n\\n.list-group-item-success{\\n    background-color:#FBE9C1;\\n}\\n\\n.badge{\\n    margin-left: 5px;\\n}\\n\\n.display-none{\\n    display: none;\\n}\\n\\n.today{\\n    color: white;\\n    font-size: 15px;\\n}\\n\\n.setDate{\\n    height: 200px;\\n}\\n\\n.btn-margin{\\n    margin-right: 15px;\\n}\\n\\np{\\n  margin: 0px;  \\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/fit/fit.component.css\n// module id = ./src/app/fit/fit.component.css\n// module chunks = main","module.exports = \"<!-- Display Saved Profile -->\\n<div class=\\\"row\\\" >\\n    <!-- Saved Profile Display -->\\n    <div class=\\\"col-md-4\\\">\\n        <div class=\\\"card\\\" >\\n            <div class=\\\"card-header-own text-uppercase\\\">\\n            {{Me.Name}}'s Profile\\n            </div> <!-- card header -->\\n\\n            <div class=\\\"card-body\\\">\\n                <form>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"Name\\\" class=\\\"col-sm-10 col-form-label\\\">Name</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"Name\\\" value= {{Me.Name}}>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"Age\\\" class=\\\"col-sm-10 col-form-label\\\">Age</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"Age\\\" value= {{Me.Profile.Age}}>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"Height\\\" class=\\\"col-sm-10 col-form-label\\\">Height</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"Height\\\" value= \\\"{{Me.Profile.Height}} cm\\\"> \\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"Weight\\\" class=\\\"col-sm-10 col-form-label\\\">Weight</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"Weight\\\" value= \\\"{{Me.Profile.Weight}} kg\\\"> \\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"BMI\\\" class=\\\"col-sm-10 col-form-label\\\">BMI</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"BMI\\\" value= {{Me.Profile.BMI}}>\\n                        </div>\\n                    </div>                    \\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"GoalWeight\\\" class=\\\"col-sm-10 col-form-label\\\">Goal Weight</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"GoalWeight\\\" value= \\\"{{Me.Profile.GoalWeight}} kg\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"GoalBMI\\\" class=\\\"col-sm-10 col-form-label\\\">Goal BMI</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"GoalBMI\\\" value= {{Me.Profile.GoalBMI}}>\\n                        </div>\\n                    </div>  \\n                </form>\\n            </div> <!-- card body -->\\n        </div> <!-- card -->\\n    </div><!-- column -->\\n    <!-- Saved Profile display ends-->\\n\\n    <!-- Set Workout Date -->\\n    <div class =\\\"col-md-8\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"card\\\" [ngClass]=\\\"{'display-none' : Me.Month && Me.Date}\\\">\\n                    <div class=\\\" card-header-own \\\">\\n                        <div class=\\\"text-uppercase d-flex justify-content-center\\\" >\\n                            Set Your Date\\n                        </div>\\n                        <div class=\\\" d-flex justify-content-center subtitle\\\">\\n                            Set the day for new workout \\n                            <br />or\\n                            <br />Enter the day you Want to continue\\n                        </div>\\n                    </div> <!-- card header -->\\n                        \\n                    <div class=\\\"card-body d-flex justify-content-center setDate\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col\\\">\\n                                <form #setDate = \\\"ngForm\\\">\\n                                    <div class=\\\"row d-flex justify-content-center\\\">\\n                                        <div class=\\\"col\\\" style=\\\"width: 15rem\\\">\\n                                           <p class=\\\"d-flex justify-content-center\\\"> Month</p><br/>\\n                                            <input #month type=\\\"number\\\" min=\\\"1\\\" max=\\\"12\\\" class=\\\"form-control\\\" placeholder=\\\"Month\\\">\\n                                        </div> \\n                                        <div class=\\\"col\\\">\\n                                            <p class=\\\"d-flex justify-content-center\\\"> Date</p><br/>\\n                                            <input #date class=\\\"form-control\\\" type=\\\"number\\\" min =\\\"0\\\" max =\\\"31\\\"  placeholder=\\\"Date\\\">\\n                                        </div>\\n                                    </div>\\n                                    <br/>\\n                                    <div class=\\\"row d-flex justify-content-end\\\" >\\n                                        <button class=\\\"btn btn-primary btn-margin\\\" type=\\\"submit\\\" \\n                                                (click)=\\\"addTime($event, month.value, date.value); setDate.reset();\\\" >\\n                                            Save\\n                                        </button>\\n                                    </div>\\n                                </form>\\n                            </div> <!-- col -->\\n                            \\n                        </div> <!-- row -->\\n                    </div> <!-- card body -->\\n                                \\n                </div> <!-- card -->\\n            </div> <!-- col -->\\n            <!-- Set Workout Date -->\\n\\n\\n            <!-- Recorded Date List -->\\n            <div class=\\\"col-md-6\\\" [ngClass]=\\\"{'col-md-12' : Me.Month && Me.Date}\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header-own\\\">\\n                        <div class=\\\"text-uppercase\\\">\\n                            Workout Record \\n                        </div>\\n                        <div class=\\\"subtitle\\\">Click to retrieve workout data on selected date.</div>\\n                    </div> <!-- card header -->\\n                    <div class=\\\"card-body\\\">\\n                        <form>\\n                            <div class=\\\"form-group\\\">\\n                                <select multiple class=\\\"form-control\\\" id=\\\"exampleFormControlSelect2\\\" >\\n                                    <option *ngIf =\\\"Me.History.length == 0\\\">No Workout History Yet!</option>\\n                                    <option *ngFor=\\\"let list of Me.History\\\" (click)=\\\"submitDate($event, list.KeyDate)\\\">\\n                                        {{list.KeyDate}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n                        </form>\\n                    </div> <!-- card body -->\\n                </div> <!-- card -->\\n            </div> <!-- col -->\\n            <!-- Recorded Date List -->\\n        </div> <!-- row -->\\n \\n        <div class=\\\"row\\\">\\n            <!-- Workout List -->\\n            <div class=\\\"col-md-6 \\\">\\n                <div class=\\\"card display-none\\\" [ngClass]=\\\"{'display-none': !Me.Month && !Me.Date}\\\" >\\n                    <div class=\\\"card-header-own\\\">\\n                        <div class=\\\"text-uppercase\\\">\\n                            Workout List \\n                        </div>\\n                        <div class=\\\"subtitle\\\">Click workout list to add to your plan</div>\\n                    </div> <!-- card header -->\\n                    <div class=\\\"card-body \\\">\\n                        <form>\\n                            <div class=\\\"form-group\\\">\\n                                <select multiple class=\\\"form-control\\\" id=\\\"exampleFormControlSelect2\\\" >\\n                                <option *ngFor=\\\"let list of ExerciseList\\\" (click)=\\\"submitWorkout($event, list)\\\">\\n                                    {{list}}\\n                                </option>\\n                                </select>\\n                            </div>\\n                        </form>\\n                    </div> <!-- card body -->\\n                </div> <!-- card -->\\n            </div>\\n            <!-- Workout List -->\\n\\n            <!-- Workout Plan-->\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"card display-none\\\" [ngClass]=\\\"{'display-none': !Me.Month && !Me.Date}\\\">\\n                    <div class=\\\"card-header-own\\\">\\n                        <div class=\\\"text-uppercase today\\\" >\\n                            {{Me.Month}} {{Me.Date}}\\n                        </div>\\n                        <div class=\\\"text-uppercase \\\">\\n                            Workout Plan\\n                        </div>\\n                        <div class=\\\"subtitle\\\">This is your planned workouts.<br />If you finish one of them,<br /> add your time and sets.<br/> Click Done button to record your workout.</div>\\n    \\n                    </div> <!-- card header -->\\n                    \\n                    <div class=\\\"card-body\\\">\\n                        <ul class=\\\"list-group list-group-flush \\\">\\n                            <li *ngFor=\\\"let list of Me.PlanExercise\\\"\\n                                [ngClass]=\\\"{ 'list-group-item-success': list.Chosen }\\\"                            \\n                                class=\\\"list-group-item list-group-flush \\\">\\n                                {{list.Text}}\\n                                <form>\\n                                    <div class=\\\"row d-flex justify-content-end\\\">\\n                                        <div class=\\\"col\\\">\\n                                        <input #time type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" placeholder=\\\"Min.\\\">\\n                                        </div>\\n                                        <div class=\\\"col\\\">\\n                                        <input #set type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" placeholder=\\\"Sets\\\">\\n                                        </div>\\n                                    </div>\\n                                </form>\\n                                <div class=\\\"d-flex justify-content-end\\\">\\n                                    <button class=\\\"\\\"(click)=\\\"doneExercise($event, list.Text, time.value, set.value)\\\"\\n                                            class=\\\"col-sm-3 btn btn-sm btn-primary\\\">\\n                                            Done\\n                                    </button> &nbsp;\\n                                    <button class=\\\"\\\"(click)=\\\"dismiss($event, list.Text, time.value, set.value)\\\"\\n                                    class=\\\"col-sm-4 btn btn-sm btn-primary\\\">\\n                                        Dismiss\\n                                    </button>\\n\\n                                </div>\\n                            </li>\\n                        </ul>\\n                    </div> <!-- card body -->\\n                </div> <!-- card -->\\n            </div> <!-- col -->\\n            <!-- Workout Plan-->\\n        </div> <!-- row -->\\n\\n        <!-- Workout Log -->\\n        <div class = \\\"row-md-4\\\">\\n            <div class=\\\"card tracking display-none\\\" [ngClass]=\\\"{'display-none': !Me.Month && !Me.Date}\\\">\\n                <div class=\\\"card-header-own date\\\">\\n                    <div class=\\\"text-uppercase subtitle\\\">\\n                            You worked out on <br /> {{Me.Month}} {{Me.Date}}\\n                    </div> \\n                    <div class=\\\"text-uppercase\\\">\\n                        Workout Log \\n                    </div> \\n                    <div class=\\\"subtitle\\\"> Well Done, Here are your workout achievements!  </div>\\n                </div> <!-- card header -->\\n                <div class=\\\"card-body\\\">\\n                    <ul class=\\\"list-group list-group-flush\\\" *ngFor= \\\"let choice of Me.DoneExerciseList\\\">\\n                        <li class=\\\"list-group-item \\\">\\n                            {{choice.Text}}\\n                            <div>\\n                                <i class=\\\"badge float-right badge-info d-flex justify-content-end\\\" >\\n                                    Total Cycle: {{choice.TotalTime}} min \\n                                </i>\\n                                <i class=\\\"badge float-right badge-light d-flex justify-content-end\\\" >\\n                                    Total Set: {{choice.Set}} times\\n                                </i>\\n                                <i class=\\\"badge float-right badge-light d-flex justify-content-end\\\" >\\n                                    Total Time: {{choice.Time}} min \\n                                </i>\\n                            </div>\\n                            \\n                        </li>\\n                    </ul>\\n                    <div class=\\\"card-body\\\">\\n                        <i>\\n                            Your Total Workout Time: {{Me.TotalSetTime}} minutes\\n                        </i>\\n                    </div>\\n                </div> <!-- card body -->\\n            </div> <!-- card -->\\n        </div> <!-- row -->\\n        <!-- Workout Log -->\\n\\n        <!-- Reset -->\\n        <div class=\\\"row-md-4 display-none \\\" [ngClass]=\\\"{'display-none' : !Me.Month && !Me.Date}\\\">\\n            <div class=\\\"card-body \\\" style=\\\"border: 1px solid #7CACEA\\\" >\\n                <div class=\\\"d-flex justify-content-center\\\"> Ready to track another workout? </div>\\n                <div class=\\\"d-flex justify-content-center\\\">Reset your Workout List!</div>\\n                <div class=\\\" d-flex justify-content-center\\\">\\n                    <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"reset($event)\\\">Reset</button>\\n                </div>\\n            </div> <!-- card body -->\\n        </div> <!-- row -->\\n        <!-- Reset -->\\n    </div><!-- col -->\\n</div> <!-- row -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/fit/fit.component.html\n// module id = ./src/app/fit/fit.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Http } from \"@angular/http\";\nimport {Fit, User } from '../models/exercise';\nimport { MessagesService } from '../services/messages.service';\nimport { FitService } from '../services/fit.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-fit',\n  templateUrl: './fit.component.html',\n  styleUrls: ['./fit.component.css']\n})\nexport class FitComponent implements OnInit {\n\n    Model: Fit;\n    Me: User;\n    ExerciseList: string[];\n\n  constructor(private http: Http,\n              private _Messages: MessagesService,\n              private _Fit: FitService,\n              private _Router: Router\n) {\n    this.Me = _Fit.Me;\n    this.Model = _Fit.Model;\n    \n    this.ExerciseList = _Fit.ExerciseStack;\n    if(!this.Me){\n      _Router.navigate(['/login']);\n    } \n  } \n\n  ngOnInit() {\n  }\n\n\n\n  // Record the month and the date ((user input)) of completed workout\n  addTime(e: MouseEvent, month: any, date: number){\n    e.preventDefault();\n    \n    // prevent empty submit.\n    if(!date || !month){\n      alert('Please input month and date');\n      return;\n    }\n    // convert month to corresponding string.\n    while(true){\n      if(month == 1){\n        month = 'January';\n        break;\n      }else if(month == 2){\n        month = 'February';\n        break;\n      }else if(month == 3){\n        month = 'March';\n        break;\n      }else if(month == 4){\n        month = 'April';\n        break;\n      }else if(month == 5){\n        month = 'May';\n        break;\n      }else if(month == 6){\n        month = 'June';\n        break;\n      }else if(month == 7){\n        month = 'July';\n        break;\n      }else if(month == 8){\n        month = 'August';\n        break;\n      }else if(month == 9){\n        month = 'September';\n        break;\n      }else if(month == 10){\n        month = 'October';\n        break;\n      }else if(month == 11){\n        month = 'November';\n        break;\n      }else if(month == 12){\n        month = 'December';\n        break;\n      }else{\n        alert('Please input between 1 - 12');\n        return;\n      }\n    }\n\n    // set number range for date\n    if(date < 1 || date > 31){\n      alert('Please input between 1 - 31');\n      return;\n    }\n\n    var key = month +' / '+date;\n\n    // create a new date history\n    if(!this.Me.History.find(x => x.KeyDate == key)){\n      this.Me.PlanExercise = [];\n      this.Me.DoneExerciseList = [];\n      this.Me.TotalSetTime = 0;\n      this.Me.Month = month;\n      this.Me.Date = date;\n      this.Me.History.push({ Name: this.Me.Name, DoneExerciseList: [], PlanExercise: [], TotalSetTime: 0, \n        Month: month, Date: date, KeyDate: key.toString()});\n      this._Fit.SetDay(this.Me.Name, key, month, date);\n    }\n    //if the recorded day already exists, set recorded day to a user\n    else{\n      // find user's history from History[] then return to the user.\n      alert('It seems you already have a workout record on that day');\n    }\n  }\n\n  // submit previous date to get workout history of that day\n  submitDate(e: MouseEvent, key: string){\n    if(this.Me.History.find(x => x.KeyDate == key)){\n      this._Fit.getHistory(key);\n    }\n    else{\n      console.log('no history found');\n    }\n  }\n\n  // submit planned workout list \n  submitWorkout(e: MouseEvent, text: string){\n    e.preventDefault();\n    // prevent submitting same list again and again.\n    if(this.Me.PlanExercise.find(x => x.Text == text)){\n      return;\n    }\n    else{\n      // to display current date and Me's workout list\n      this.Me.PlanExercise.push({Text: text, Chosen: false});\n    }\n\n    var key = this.Me.Month+' / '+this.Me.Date;\n\n    // find the user's plan history from History[] by key\n    if(this.Me.History.find(x => x.KeyDate == key).PlanExercise.length == 0){\n      this.Me.History.find( x => x.KeyDate == key).PlanExercise.push({Text:text, Chosen: false});\n      this._Fit.planHistory(text, key);\n    }\n    else{\n      var result = this.Me.History.find(x => x.KeyDate == key);\n      this.Me.Month = result.Month;\n      this.Me.Date = result.Date;\n      this.Me.DoneExerciseList = result.DoneExerciseList;\n      this.Me.PlanExercise = result.PlanExercise;\n      this.Me.TotalSetTime = result.TotalSetTime;\n      this._Fit.planHistory(text, key);\n    }\n    \n  }\n\n  // doneExercise() will track the completed workout that a user checks it as \"done\"\n  doneExercise(e: MouseEvent, text: string, time: number, set: number){\n    e.preventDefault();\n    if(!time || !set){\n      alert('Please enter time and set');\n      return;\n    }\n    if((time < 1 || set < 1)){\n      alert('Please enter positive number');\n      return;\n    }\n    var key = this.Me.Month+' / '+this.Me.Date;\n    var totalTime = time * set;\n    // if text is chosen, change the color by submitting the text to server and changing Chosen to true.\n    this._Fit.makeChosen(text, key);\n    \n    // Find user's history and return to the user so that user can see each date's data.\n    if(!this.Me.History.find(x => x.KeyDate == key).DoneExerciseList.find(x=> x.Text == text)){\n      this.Me.TotalSetTime = this.Me.TotalSetTime + Number(totalTime);\n      this.Me.History.find(x => x.KeyDate == key).TotalSetTime = Number(totalTime);\n      this.Me.History.find(x => x.KeyDate == key).DoneExerciseList.push({Text: text, Time: time, Set: set, TotalTime: totalTime});\n\n      this._Fit.getTotalTime(this.Me.Name, key, this.Me.TotalSetTime);\n      this._Fit.RecordDay(text, key, time, set, totalTime);\n    }\n    else{\n\n      // if the workout list is already submitted, find the data via key.\n      var user = this.Me.History.find(x=>x.KeyDate == key).DoneExerciseList.find(x=> x.Text == text);\n      this.Me.History.find(x => x.KeyDate == key).TotalSetTime = Number(this.Me.TotalSetTime) + Number(totalTime);\n\n      user.Time = Number(user.Time) + Number(time);\n      user.Set = Number(user.Set) + Number(set);\n      user.TotalTime = Number(user.TotalTime) + Number(totalTime);\n      this.Me.TotalSetTime = Number(this.Me.TotalSetTime) + Number(totalTime);\n      var result = this.Me.History.find(x => x.KeyDate == key);\n      this.Me.Month = result.Month;\n      this.Me.Date = result.Date;\n      this.Me.DoneExerciseList = result.DoneExerciseList;\n      this.Me.PlanExercise = result.PlanExercise;\n      this.Me.TotalSetTime = result.TotalSetTime;\n\n      this._Fit.getTotalTime(this.Me.Name, key, this.Me.TotalSetTime);\n      this._Fit.RecordDay(text, key, time, set, totalTime);\n      \n    }\n  }\n\n\n  dismiss(e: MouseEvent, text: string, time: number, set: number){\n    var key = this.Me.Month+' / '+this.Me.Date;\n\n    console.log('dismiss');\n    this._Fit.dissmissPlan(text, key);\n  }\n  // when user hits Reset button, reset the page.\n  reset(e: MouseEvent){\n    \n    // call set day to either start a new date or to retrieve history\n    this.Me.Month = null;\n    this.Me.Date = null;\n  }\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/fit/fit.component.ts","module.exports = \"ul{\\n    list-style-type: none;\\n    margin: 10px;\\n}\\n\\n.card{\\n    margin: 10px;\\n    color: #1C5F93;\\n}\\n\\n.card-header-own{\\n    background-color: #7CACEA;\\n    text-align: center;\\n    border: none;\\n    padding: 1.7rem 0.5rem;\\n    font-size: 30px;\\n    color: white;\\n}\\n\\nform{\\n    padding: 1rem;\\n}\\n\\n.subtitle{\\n    font-size: 15px;\\n    margin: 1px;\\n    margin-bottom: 3px;\\n    font-weight: 300;\\n    padding: 0.2rem;\\n    \\n}\\n\\n.badge{\\n    margin-left: 5px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/history/history.component.css\n// module id = ./src/app/history/history.component.css\n// module chunks = main","module.exports = \"<!-- User's Workout Summary -->\\n<div class=\\\"row d-flex justify-content-center\\\">\\n    <div class=\\\"col-md-4\\\">\\n        <div class=\\\"card\\\" >\\n            <div class=\\\"card-header-own\\\">\\n                <div class=\\\"text-uppercase\\\">\\n                    Workout Day\\n                </div>\\n                <div class=\\\"subtitle\\\">Select Your Date to See Your Workout History </div>\\n            </div> <!-- card header-->\\n            <div class=\\\"card-body\\\">\\n                <form>\\n                    <div class=\\\"form-group\\\">\\n                        <select multiple class=\\\"form-control\\\" id=\\\"exampleFormControlSelect2\\\" >\\n                        <option *ngIf =\\\"Me.History.length == 0\\\">No Workout History Yet!</option>\\n                        <option *ngFor=\\\"let list of Me.History\\\" (click)=\\\"submitLog($event, list.KeyDate)\\\">\\n                            {{list.KeyDate}}\\n                        </option>\\n                        </select>\\n                    </div>\\n                </form>\\n            </div> <!-- card body -->\\n        </div><!-- card-->\\n    </div><!-- col -->\\n\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header-own\\\">\\n                <div class=\\\"text-uppercase \\\">\\n                    Workout Summary\\n                </div>\\n                <div class=\\\"subtitle\\\">Enjoy your Achievement!</div>\\n            </div> <!-- card header-->\\n            \\n            <div class=\\\"card-body\\\">\\n                <ul class=\\\"list-group list-group-flush \\\">\\n                    <li *ngIf =\\\"Me.History.length == 0\\\">No Workout History Yet!</li>\\n                    <li *ngFor=\\\"let list of Me.Summary.DoneExerciseList\\\"\\n                        class=\\\"list-group-item list-group-flush \\\">\\n                        {{list.Text}}\\n                    </li>\\n                </ul>\\n            </div> <!-- card body -->\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"d-flex justify-content-center\\\">\\n                    <i class=\\\"badge float-right badge-info\\\" >\\n                    Total Time: {{Me.Summary.TotalSetTime}} min <br />\\n                    </i>\\n                </div>\\n            </div>\\n\\n        </div><!-- card -->\\n    </div><!-- col -->\\n\\n</div><!-- row -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/history/history.component.html\n// module id = ./src/app/history/history.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/exercise';\nimport { FitService } from '../services/fit.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n\n  Me: User;\n\n  constructor(private _Fit: FitService, private _Router: Router) {\n    this.Me = _Fit.Me;\n    if(!this.Me){\n      _Router.navigate(['/login']);\n    } \n\n  \n   }\n\n\n  ngOnInit() {\n  }\n\n  // find workout summary via key.\n  submitLog(e: MouseEvent, key: string){\n    if(this.Me.History.find(x => x.KeyDate == key)){\n      this._Fit.getHistory(key);\n\n    }\n    else{\n      console.log('no history found');\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/history/history.component.ts","module.exports = \".btn{\\n    margin-top: 10px;\\n}\\n\\n.center-img{\\n\\n    display: block;\\n    margin-left: auto;\\n    margin-right: auto;\\n    width: 80%;\\n}\\n\\n.lead{\\n    color:  #1C5F93;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron justify-content-center\\\">\\n  <h1 class=\\\" d-flex justify-content-center display-4\\\">Welcome to Fitness Tracker!</h1>\\n  <div class=\\\"d-flex justify-content-center\\\">\\n    <p class=\\\"lead\\\">This is a simple fitness tracker app. You can use it as if it's your workout journal! </p>\\n  </div>\\n  <div class=\\\"d-flex justify-content-center\\\">\\n    <p class=\\\"lead\\\">You can record your date and workout lists to be proud of your awesome achievement!</p>\\n  </div>\\n  <hr class=\\\"my-4\\\">\\n <!-- Carousel -->\\n  <ngb-carousel>\\n    <ng-template ngbSlide>\\n      <img *ngIf =\\\"images\\\" class=\\\"center-img\\\"  [src]=\\\"images|| ''\\\" alt=\\\"Random first slide\\\">\\n      <div class=\\\"carousel-caption\\\">\\n        <h3>\\n          Motivate\\n        </h3>\\n        <p>\\n          Fitness motivates you to live a full life.\\n        </p>\\n      </div>\\n    </ng-template>\\n    <ng-template ngbSlide>\\n      <img *ngIf =\\\"images\\\" class=\\\"center-img\\\" [src]=\\\"images[1] || ''\\\" alt=\\\"Random second slide\\\">\\n      <div class=\\\"carousel-caption\\\">\\n        <h3>Mind</h3>\\n        <p>Fitness is not just for your physical body, it's also for your mind and soul.  </p>\\n      </div>\\n    </ng-template>\\n    <ng-template ngbSlide>\\n      <img *ngIf =\\\"images\\\" class=\\\"center-img\\\" [src]=\\\"images[3]|| ''\\\" alt=\\\"Random third slide\\\">\\n      <div class=\\\"carousel-caption\\\">\\n        <h3>More</h3>\\n        <p>You can do more with healthy body and soul!</p>\\n      </div>\\n    </ng-template>\\n  </ngb-carousel>\\n  \\n  <span class=\\\"d-flex justify-content-center\\\">\\n    <a class=\\\"btn btn-primary btn-lg\\\" href=\\\"/sign-up\\\" role=\\\"button\\\">Get Started</a>\\n  </span>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Http } from \"@angular/http\";\nimport {Fit, User } from '../models/exercise';\nimport { FitService } from '../services/fit.service';\nimport {map} from 'rxjs/operators';\nimport {NgbCarouselConfig} from '@ng-bootstrap/ng-bootstrap';\n@Component({\n  selector: 'app-home', \n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  Me: User;\n  private _api = \"http://localhost:8080/fit\";\n  images: string[] = [];\n\n\n  constructor(private http: Http, private _Fit: FitService, config: NgbCarouselConfig) {\n   \n    _Fit.getPic().subscribe(data => {\n      this.images = data;\n    });\n    config.interval = 5000;\n    config.wrap = false;\n    config.keyboard = false;\n  \n    this.Me = _Fit.Me;\n  }\n\n  ngOnInit() {\n    \n  }\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \".login-form{\\n    margin-top: 10px;\\n    margin-bottom: 2px;\\n    \\n}\\n\\n.btn{\\n    margin-top: 2px;\\n    margin-bottom: 5px;\\n\\n    color: white;\\n    background-color: #F4C3D8;\\n    border: none;\\n}\\n\\n.card{\\n    margin: 10px;\\n    color: #1C5F93;\\n}\\n\\n.card-header{\\n    background-color: #7CACEA;\\n    text-align: center;\\n    border: none;\\n    padding: 1.7rem 0;\\n    font-size: 30px;\\n    color: white;\\n    \\n    \\n}\\n\\nform{\\n    padding: 1rem;\\n}\\n\\n.text-uppercase{\\n    font-size: 12px;\\n    color: white;\\n}\\n\\n.title{\\n    font-size: 20px;\\n    \\n    padding: 0.4rem 0.4rem;\\n}\\n\\n.black{\\n    margin-top: 10px;\\n    margin-bottom: 2px;\\n    color: #7CACEA;\\n}\\n\\n.font-margin{\\n    margin-bottom: 5px;\\n    margin-left: 10px;\\n}\\n\\n.btn-margin{\\n    margin:0px;\\n}\\n\\n.col-sm-2{\\n    margin: 2px;\\n    padding: 0.2rem;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<!-- existing user sign in here -->\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <div class=\\\"card text-center\\\" style=\\\"width: 30rem\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"text-uppercase title\\\">Please Sign In</div>\\n        </div>\\n        <div class =\\\"text-uppercase black\\\">\\n            Already a user? \\n        </div>\\n        <div class=\\\"font-margin\\\">\\n            Please Sign In\\n        </div> \\n        <div class=\\\"login-form\\\" >\\n            <input #Name type =\\\"text\\\" placeholder =\\\"User Name\\\"/><br/>\\n            <input #Password type =\\\"password\\\" placeholder =\\\"Password\\\" />\\n        </div>\\n    \\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-sm-2\\\">\\n                <button class=\\\" btn btn-margin\\\" (click)=\\\"login(Name.value, Password.value)\\\" >Sign In</button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-link\\\">\\n            <div class =\\\"text-uppercase black\\\">\\n                New to Here?\\n            </div>\\n            \\n            <button type=\\\"button\\\" class=\\\"btn btn-sm\\\">\\n                <div class=\\\"nav-link\\\" routerLink=\\\"/sign-up\\\" >\\n                    Go to Sign Up\\n                </div> \\n            </button>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FitService } from '../services/fit.service';\nimport { Fit } from '../models/exercise';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private _Fit: FitService) { }\n\n  ngOnInit() {\n  }\n\n  // pass name and password to Service for a user to sign-in\n  login(name:string, password: string){\n    if(!name || !password){\n      alert('Please Enter Username and Password');\n      return;\n    }\n    this._Fit.login(name, password);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \"#messages {\\n    padding-top: 0.5rem;\\n    padding-left: 0.2rem;\\n    \\n}\\n\\n.button {\\n    margin-left: 5px;\\n    color: #1C5F93;\\n    font-weight: bold;\\n    float: right;\\n    font-size: 22px;\\n    line-height: 20px;\\n    cursor: pointer;\\n    -webkit-transition: 0.3s;\\n    transition: 0.3s;\\n}\\n\\n.button:hover {\\n    color: black;\\n    cursor: pointer;\\n}\\n\\n.alert{\\n    padding: 10px;\\n    border: 2px solid #CFD5E1;\\n    color: #1C5F93;\\n    margin-bottom: 15px;\\n}\\n\\n.msg{\\n    list-style-type: none;\\n    padding-top: 0.2rem;\\n    padding-left: 0.2rem;\\n    padding-bottom: 0.2rem;\\n}\\n\\nh3{\\n    text-align: center;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/messages/messages.component.css\n// module id = ./src/app/messages/messages.component.css\n// module chunks = main","module.exports = \"<div id=\\\"messages\\\">\\n  <div class=\\\"alert\\\" *ngFor=\\\"let msg of Messages.Messages; let i = index;\\\">\\n    <!-- Binding-->\\n    <button class=\\\"close\\\" (click) = \\\"delete(i)\\\"> <!-- javascript-->\\n      &times;\\n    </button>\\n\\n    {{msg}}\\n    \\n    \\n  </div><!-- Alert -->\\n</div><!--messages-->\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/messages/messages.component.html\n// module id = ./src/app/messages/messages.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MessagesService } from '../services/messages.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public Messages: MessagesService) { \n  }\n\n  ngOnInit() {\n  }\n\n  delete( i: number ){\n    this.Messages.Messages.splice(i, 1);\n\n  } \n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/messages/messages.component.ts","module.exports = \".bg-color{\\n  background-color:  #7CACEA;\\n  color: white;\\n}\\n.btn{\\n  background-color: #F5F5F5;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/nav/nav.component.css\n// module id = ./src/app/nav/nav.component.css\n// module chunks = main","module.exports = \"<!-- Navigation -->\\n<nav class=\\\"navbar navbar-expand-md bg-color navbar-dark \\\">\\n        <a class=\\\"navbar-brand\\\" routerLink = \\\"/fit\\\">Fitness Tracker</a>\\n        <button (click)=\\\"isCollapsed = !isCollapsed\\\" class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n    \\n        <div [ngbCollapse]=\\\"isCollapsed\\\" class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n          <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/editProfile\\\" routerLinkActive=\\\"active\\\">Profile</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/fit\\\" routerLinkActive=\\\"active\\\">Fitness</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/history\\\" routerLinkActive=\\\"active\\\">History</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/share\\\" routerLinkActive=\\\"active\\\">Share</a>\\n            </li>\\n          </ul>\\n          <button class=\\\"btn btn-sm nav-item justify-content:between\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/sign-up\\\" routerLinkActive=\\\"active\\\">Sign up</a></button>\\n          <button class=\\\"btn btn-sm nav-item justify-content:between\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Sign in</a></button>\\n        </div>\\n    </nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/nav/nav.component.html\n// module id = ./src/app/nav/nav.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  public isCollapsed = true;\n  constructor() { \n  \n  }\n\n  ngOnInit() {\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/nav/nav.component.ts","module.exports = \".btn-own{\\n    margin: 15px;\\n    color: white;\\n    background-color: #F4C3D8;\\n    border: none;\\n}\\n\\n.card{\\n    margin: 10px;\\n    color: #1C5F93;\\n}\\n\\n.card-header-own{\\n    background-color: #7CACEA;\\n    height: 120px;\\n    text-align: center;\\n    border: none;\\n    padding: 1.7rem 0;\\n    font-size: 30px;\\n    color: white;\\n    \\n    \\n}\\n\\nform{\\n    padding: 1rem;\\n}\\n\\n.text-uppercase-own{\\n    text-transform: uppercase;\\n    font-size: 12px;\\n    color: white;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/profile.component.css\n// module id = ./src/app/profile/profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card\\\"  >\\n  <div class=\\\"card-header-own\\\">\\n    <div class=\\\"text-uppercase-own\\\">Please Create Your Profile Before Tracking Your Workout!</div> \\n    <div class=\\\"text-uppercase\\\">Profile</div>\\n  </div> <!-- card header-->\\n\\n  <form> <!-- form -->\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"inputName\\\">Name</label>\\n            <input #name disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputName\\\" [value]=\\\"Me.Name\\\">\\n        </div>\\n    \\n        <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"inputAge\\\">Age</label>\\n            <input #age type=\\\"number\\\" min=\\\"1\\\" max=\\\"150\\\" class=\\\"form-control\\\" id=\\\"inputAge\\\" placeholder=\\\"Age\\\" >\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"inputHeight\\\">Height</label>\\n        <input #height type=\\\"number\\\" min=\\\"90\\\" max=\\\"350\\\" class=\\\"form-control\\\" id=\\\"inputHeight\\\" placeholder=\\\"cm\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"inputWeight\\\">Weight</label>\\n        <input #weight type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" id=\\\"inputWeight\\\" placeholder=\\\"kg\\\">\\n      </div>\\n  \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"inputGoalWeight\\\">Goal Weight</label>\\n        <input #goalWeight type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" id=\\\"inputGoalWeight\\\" placeholder=\\\"kg\\\">\\n      </div>\\n    </form> <!-- form -->\\n    <div>\\n        <button class=\\\"btn btn-primary btn-sm btn-own\\\" (click)=\\\"adding(age.value, weight.value, height.value, goalWeight.value, name.value)\\\">Save</button>\\n    </div>  <!-- button -->\\n</div> <!-- Profile Form ends-->\\n\\n\\n\\n        \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/profile.component.html\n// module id = ./src/app/profile/profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FitService } from '../services/fit.service';\nimport { Fit, User } from '../models/exercise';\nimport { MessagesService } from '../services/messages.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  Me: User;\n\n  constructor( private _Fit: FitService, private _Messages: MessagesService) {\n    this.Me = this._Fit.Me;\n    this._Messages.Messages.push('Complete your Profile before you begin to plan your workout.');\n    \n   }\n\n  ngOnInit() {\n  }\n\n  // pass user's profile information to Service after calculating all bmi.\n  adding(age: number, weight: number, height: number, goalWeight: number, name: string ){\n    // prevent empty profile submit\n    if(!weight || !height || !goalWeight || !age){\n      alert('Please Fill All Information Above' );\n      return;\n    }\n    const goalBmi = this.calculateBMI(goalWeight, height);\n    const bmi = this.calculateBMI(weight, height);\n    this._Fit.profileAdd(age, weight, height, goalWeight, bmi, goalBmi, name);\n  }\n  // calculate BMI.\n  calculateBMI(weight: number, height: number){\n    return Math.round((weight / height / height * 10000) * 100) / 100;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/profile/profile.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Fit, User, Info, Exercise, People, Friend } from '../models/exercise';\nimport { Router } from '@angular/router';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class FitService {\n\n  private _api = \"http://localhost:8080/fit\";\n\n  ExerciseStack =  [];\n\n  Me: User;\n  Model: Fit;\n  TotalTime: number;\n  \n\n  constructor(private http: Http, \n              private _Router: Router,\n              ) { \n                this.ExerciseStack =  [\n                  \"Squat\",\n                  \"Plank\", \n                   \"Running\",\n                   \"Jump Rope\",\n                   \"Swimming\",\n                   \"Walk\",\n                   \"Aerobic Dance\",\n                   \"Zumba\",\n                   \"Yoga\",\n                   \"Centergy\",\n                   \"Stretching\",\n                   \"Gentle Yoga\",\n                   \"Push Up\"\n                   ];\n    \n                \n\n  }\n\n  // send random images to home component.\n  getPic(){\n    return this.http.get(this._api + \"/home/getImage\", {})\n            .map((response:Response) => response.json());\n  }\n  \n  // initialize user's data when they sign-up.\n  signUp(name: string, password: string){\n    this.Me = {Name: name, Password: password, Profile: {Age: null, Weight: null, Height: null, GoalWeight: null, BMI: null, GoalBMI: null }, \n    PlanExercise: [], DoneExerciseList: [], Record: [], TotalSetTime: 0, EachShare: [], Notice: [], Requested: false, FriendList: [], History: [],\n    Month: null, Date: null, Summary: {Name: name, DoneExerciseList: [], PlanExercise: [], TotalSetTime: 0, Month: 0, Date: 0, KeyDate: null}, FriendSummary:{Name: name, DoneExerciseList: [], PlanExercise: [], TotalSetTime: 0, Month: 0, Date: 0, KeyDate: null}};\n    this.http.get(this._api + \"/sign-up\", { params : { name: name, password: password } })\n    .subscribe(data=> {\n      if(!data.json()){\n        // alert user name taken\n        alert(\"User Name is taken, please try different name\");\n        return;\n      }\n      this._Router.navigate(['/profile']);\n    })\n  }\n\n  // get user's information from the server.\n  login(name: string, password: string){\n    this.http.get(this._api + \"/exercise/login\", { params : { name: name, password: password } })\n    .subscribe(data=> {\n      var check = data.json()\n      // if there is no username or password matching in the server, alert.\n      if(!check){\n        alert('Username or Password doesn\\'t match in our system! ');\n        return;\n      }\n      // if there is a user, set Me to received data.\n      this.Me = data.json()\n      this._Router.navigate(['/fit']);\n    })\n  }\n\n\n  // add user's profile to server\n  profileAdd(age: number, weight: number, height: number, goalWeight: number, bmi: number, goalBmi: number, name: string){\n    this.http.post(this._api + \"/exercise/profile\", { Age: age, Weight: weight, Height: height, \n                                                              GoalWeight: goalWeight, BMI: bmi, \n                                                              GoalBMI: goalBmi, name: name})\n    .subscribe(data => {\n        this.Me.Profile = data.json();\n    });\n    this._Router.navigate(['/fit']);\n    \n  }\n\n  // set the month and the date of user's log in the server.\n  SetDay(name: string, key: string, month: string, date: number){\n        this.http.post(this._api + '/exercise/setDay', {name: name, key: key, month: month, date: date})\n        .subscribe(data=>{\n          if(!data.json()){\n            return;\n          }\n          \n         this.Me.History = data.json();\n         \n        });\n  }\n  \n\n\n  // post planned workout list to the History[] in server\n  planHistory(text: string, key: string){\n    this.http.post(this._api + \"/exercise/planHistory\", {name: this.Me.Name, Text: text, key: key})\n              .subscribe(data => {\n                if(!data.json()){\n                  return;\n                }\n                this.Me.PlanExercise = data.json();\n              });\n\n  }\n  \n\n  // set the selected workout list to the server and make Chosen to true\n  makeChosen(text: string, key: string){\n    this.http.post(this._api + \"/exercise/chosen\", {name: this.Me.Name, text: text, key: key})\n    .subscribe(data => {\n      this.Me.PlanExercise = data.json();\n    })\n  }\n\n    \n\n  // post selected workout to the server\n  doneExercise(text: string, time: number, set: number, totalTime: number){\n    this.http.post(this._api + '/exercise/done', {name: this.Me.Name, text: text, time: time, set: set, total: totalTime })\n              .subscribe(data => {\n                if(!data.json()){\n                  return;\n                }\n                this.Me.DoneExerciseList = data.json();\n              });\n  }\n\n  dissmissPlan(text: string, key: string){\n    this.http.post(this._api + \"/exercise/dismissPlan\", {name: this.Me.Name, Text: text, key: key})\n    .subscribe(data => {\n      if(!data.json()){\n        return;\n      }\n      this.Me.PlanExercise = data.json();\n    });\n\n  }\n\n  // post total workout time to the server\n  getTotalTime(name: String, key: string, totalTime: number){\n    this.http.post(this._api + \"/exercise/totaltime\",{name: name, key: key, totalTime: totalTime})\n    .subscribe(data => {\n      this.Me.TotalSetTime = Number(data.json());\n    })\n  }\n\n  // Update the Done Exercise List in History[] in the server.\n  RecordDay(text: string, key: string, time: number, set: number, totalTime: number){\n      this.http.post(this._api + '/exercise/recordDay', {name: this.Me.Name, key: key, text: text, time: time, set: set, total: totalTime })\n      .subscribe(data => {\n        if(!data.json()){\n          return;\n        }\n        this.Me.DoneExerciseList = data.json();\n      });\n\n  }\n  // get the list of other users from the server\n  getUserList(){\n    return this.http.get(this._api + '/exercise/people', { params: {name: this.Me.Name}})\n          .map((response:Response)=>response.json());\n  }\n\n  // Send a request notice to a selected user.\n  friendRequest(friendName: string){\n    this.http.post(this._api + '/exercise/request', {friend: friendName, name: this.Me.Name})\n    .subscribe(data => {\n      if(!data.json()){\n        return;\n      }\n    });\n  }\n\n  // indicate if a user send a friend request to another user to remove that user from User's list\n  changeSentRequest(friendName: string, status: boolean ){\n    console.log('Change Sent Request ');\n    this.http.post(this._api + '/exercise/sentRequestChange', {friend: friendName, name: this.Me.Name, status: status})\n    .subscribe(data => {\n      console.log('change request works?');\n      if(!data.json()){\n        return;\n      }\n\n    });\n  }\n\n  // Add friends to this user's FriendList in the server when user accepts the request.\n  addFriendList(friendName:string){\n    this.http.post(this._api+'/exercise/addFriend',{name: this.Me.Name, friend: friendName})\n    .subscribe(data => {\n      this.Me.FriendList = data.json();\n    });\n    \n  }\n\n  \n  // add Friend's Workout Summary to Record\n  addFriendHistory(friend: string){\n    this.http.post(this._api+'/exercise/addFriendHistory',{name: this.Me.Name, friend: friend})\n    .subscribe(data => {\n      if(!data.json()){\n        return;\n      }\n      var history = data.json();\n      this.Me.Record = history;\n    });\n  }\n\n  // if user gets friend request, change the Requested status to inform the user that they have friend requests.\n  changeRequested(name: string){\n    this.http.post(this._api + '/exercise/changeRequest', {name: name})\n    .subscribe(data =>{\n      this.Me.Requested = data.json();\n    });\n  }\n\n  // retrieve previous date's workout data\n  getHistory(key: string){\n    this.http.get(this._api + \"/exercise/getHistory\", { params : { user: this.Me.Name, key: key } })\n    .subscribe(data=> {\n      var history = data.json();\n\n      this.Me.PlanExercise = history.PlanExercise;\n      this.Me.DoneExerciseList = history.DoneExerciseList;\n      this.Me.Month = history.Month;\n      this.Me.Date = history.Date;\n      this.Me.TotalSetTime = history.TotalSetTime;\n      this.Me.Summary = data.json();\n    });\n  }\n  // get friend's workout summary\n  getFriendSummary(key: string, friend: string){\n    this.http.get(this._api + \"/exercise/friendSummary\", { params : { name: this.Me.Name, key: key , friend: friend} })\n    .subscribe(data=> {\n      this.Me.FriendSummary = data.json();\n    });\n  }\n\n  // refresh Me Object to update Share component.\n  refreshMe(){\n    return this.http.get(this._api + \"/exercise/refreshMe\", { params : { name: this.Me.Name }})\n    .map((response:Response)=>response.json()); \n  }\n    \n  search(term){\n    return this.http.get(this._api + \"/share/typeAhead\", {params: {text: term}})\n    .map(res => {\n        return res.json().map(item => {\n            return item.word\n        })\n    })\n}\n\n}\n  \n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/fit.service.ts","import { Injectable } from '@angular/core';\nimport { FitService } from './fit.service';\n\n@Injectable()\nexport class MessagesService {\n\n  Messages = [];\n  constructor(private _Fit: FitService) { \n    this.Messages = ['Welcome to Fitness Tracker! You can record your workout plan.'];\n }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/messages.service.ts","module.exports = \"ul{\\n    list-style-type: none;\\n    margin: 10px;\\n}\\n\\n.card{\\n    margin: 10px;\\n    color: #1C5F93;\\n}\\n\\n.card-header{\\n    background-color: #7CACEA;\\n    text-align: center;\\n    border: none;\\n    padding: 1.7rem .4rem;\\n    font-size: 30px;\\n    color: white;\\n}\\n\\n.btn{\\n    margin-top: 2px;\\n    margin-bottom: 5px;\\n    \\n}\\n\\n.btn-color{\\n    background-color: #F4C3D8;\\n    border: none;\\n    color: white;\\n}\\n\\n.subtitle{\\n    font-size: 15px;\\n    margin: 1px;\\n    margin-bottom: 10px;\\n    font-weight: 300;\\n    padding: 0.2rem;\\n    \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/share/share.component.css\n// module id = ./src/app/share/share.component.css\n// module chunks = main","module.exports = \"<!-- Users can send a friend request and share their workout history -->\\n<div class=\\\"row justify-content-md-center\\\">\\n  <!-- Choose a user to share workout log-->\\n  <div class=\\\"col-lg-4\\\">\\n    <div class=\\\"card\\\" >\\n      <div class=\\\"card-header\\\">\\n        <div class=\\\"text-uppercase\\\">Other Users</div>\\n        <div class=\\\"subtitle text-uppercase\\\"> Send a Friend Request to Other Users!</div>\\n      </div> <!-- card header -->\\n      <div class=\\\"card-body\\\">\\n\\n        <!-- Type ahead-->\\n        <label for=\\\"typeahead-basic\\\">Search for a user:</label>\\n        <input id=\\\"typeahead-basic\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model\\\" [ngbTypeahead]=\\\"search\\\"/>\\n        <hr>\\n        <!-- type ahead-->\\n\\n\\n        <ul class=\\\"list-group list-group-flush\\\" >\\n          <li *ngIf =\\\"Me.EachShare.length == 0\\\">No Other Users</li>\\n          <li class = \\\"list-group-item d-flex justify-content-between align-items-center\\\" *ngFor =\\\" let users of Me.EachShare\\\">\\n            {{users.Name}} \\n            <button class=\\\"btn btn-color btn-sm\\\" (click) = \\\"friendRequest($event, users.Name)\\\" > Request </button>\\n          </li>\\n        </ul>\\n      </div> <!-- card-body -->\\n    </div> <!-- card -->\\n  </div><!-- col -->\\n  <!-- Choose a user to share workout log-->\\n\\n  <!-- Received Friend Requests-->\\n  <div class=\\\"col-lg-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <div class=\\\"text-uppercase\\\">Friend Request</div>\\n        <div class=\\\"subtitle text-uppercase\\\"> You've Got Friend Requests!</div>\\n      </div> <!-- card header-->\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"d-flex justify-content-md-center\\\">\\n          <button class=\\\"btn btn-color\\\" disabled *ngIf=\\\"!Me.Requested\\\">No Friend Request</button>\\n          <button class=\\\"btn btn-warning\\\"  disabled *ngIf=\\\"Me.Requested\\\">You Have a Friend Request</button>\\n        </div>\\n        <ul class=\\\"list-group-item list-group-flush list\\\" *ngFor = \\\"let friend of Me.Notice\\\">\\n          <div class = \\\"row justify-content-md-center\\\">\\n            <div class=\\\"col\\\">\\n              <li > {{friend.Friend}} </li>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <button class=\\\"btn btn-sm d-flex justify-content-end btn-warning\\\"  (click) = \\\"requestBox($event, friend.Friend)\\\"> Confirm </button>\\n            </div>\\n          </div>\\n        </ul>\\n      </div> <!-- card body-->\\n    </div>\\n  </div> <!-- col -->\\n  <!-- Received Friend Requests-->\\n\\n  <!-- Friends List-->\\n  <div class=\\\"col-lg-4\\\">\\n    <div class=\\\"card\\\" >\\n      <div class=\\\"card-header\\\">\\n        <div class=\\\"text-uppercase\\\">\\n          <div class=\\\"text-uppercase\\\">Friends List</div>\\n          <div class=\\\"subtitle text-uppercase\\\"> Click the Display to See Friend's Workout Date.</div>\\n        </div>\\n      </div> <!-- card header -->\\n      <div class=\\\"card-body\\\">\\n        <ul class=\\\"list-group list-group-flush\\\" >\\n          <li *ngIf =\\\"Me.FriendList.length == 0\\\" > No Friends Yet! </li>\\n          <li class = \\\"list-group-item d-flex justify-content-between align-items-center\\\" *ngFor = \\\"let friend of Me.FriendList\\\"> \\n            {{friend.Name}} \\n            <button class=\\\"btn btn-sm d-flex justify-content-end btn-color\\\" (click) = \\\"friendHistory($event, friend.Name)\\\"> Display </button>\\n          </li>\\n        </ul>\\n      </div> <!-- card body-->\\n    </div> <!-- card -->\\n  </div> <!-- col -->\\n  <!-- Friends List-->\\n</div><!-- row -->\\n\\n\\n<div class=\\\"row d-flex justify-content-md-center\\\">\\n  <!-- Friend's Workout Date -->\\n  <div class=\\\"col-lg-4\\\">\\n    <div class=\\\"card\\\" >\\n        <div class=\\\"card-header\\\">\\n          <div class=\\\"text-uppercase\\\">Friend's Workout Date</div>\\n          <div class=\\\"subtitle text-uppercase\\\"> Select Date to See Friend's Achievement</div>\\n        </div> <!-- card header-->\\n        <div class=\\\"card-body\\\" >\\n          <form>\\n              <div class=\\\"form-group\\\">\\n                  <select multiple class=\\\"form-control\\\" id=\\\"exampleFormControlSelect2\\\" >\\n                    <option *ngIf =\\\"Me.Record.length == 0\\\">No Friend's Workout Yet!</option>\\n                    <option *ngFor=\\\"let friend of Me.Record\\\" (click)=\\\"displayHistory($event, friend.KeyDate, friend.Name)\\\">\\n                        {{friend.KeyDate}}\\n                    </option>\\n                  </select>\\n              </div>\\n          </form>\\n        </div> <!-- card body -->\\n        \\n    </div>  <!-- card -->\\n  </div> <!-- col -->\\n  <!-- Friend's Workout Date -->\\n\\n  <!-- Friend's Workout History by Date-->\\n  <div class=\\\"col-lg-6\\\">\\n      <div class=\\\"card\\\" >\\n        <div class=\\\"card-header\\\">\\n          <div class=\\\"text-uppercase\\\">Friend's Workout Achievement</div>\\n          <div class=\\\"subtitle text-uppercase\\\"> Here's Friend's Awesome Achievements!</div>\\n        </div> <!-- card header-->\\n        <div class=\\\"card-body\\\" >\\n          <ul class=\\\"list-group list-group-flush \\\">\\n            <li *ngIf =\\\"Me.FriendSummary.DoneExerciseList.length == 0\\\">No Friend's Workout History Yet!</li>\\n            <li *ngFor=\\\"let list of Me.FriendSummary.DoneExerciseList\\\"\\n                class=\\\"list-group-item list-group-flush \\\">\\n                {{list.Text}}\\n            </li>\\n          </ul>\\n        </div> <!-- card body -->\\n\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"d-flex justify-content-center\\\">\\n              <i class=\\\"badge float-right badge-info\\\" >\\n              Total Time: {{Me.FriendSummary.TotalSetTime}} min <br />\\n              </i>\\n          </div>\\n        </div> <!-- card body -->\\n      </div>  <!-- card -->\\n    </div> <!-- col -->\\n    <!-- Friend's Workout History by Date-->\\n\\n</div> <!-- row -->\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/share/share.component.html\n// module id = ./src/app/share/share.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Http } from \"@angular/http\";\nimport { FitService } from '../services/fit.service';\nimport {Fit, User, People } from '../models/exercise';\nimport { Router } from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\n\n\nconst states = ['Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas', 'California', 'Colorado',\n  'Connecticut', 'Delaware', 'District Of Columbia', 'Federated States Of Micronesia', 'Florida', 'Georgia',\n  'Guam', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine',\n  'Marshall Islands', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana',\n  'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota',\n  'Northern Mariana Islands', 'Ohio', 'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico', 'Rhode Island',\n  'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virgin Islands', 'Virginia',\n  'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n@Component({\n  selector: 'app-share',\n  templateUrl: './share.component.html',\n  styleUrls: ['./share.component.css']\n})\n\nexport class ShareComponent implements OnInit {\n  \n  public model: any;\n  Me: User;\n\n  constructor(private _Fit: FitService, private _Router: Router) { \n    this.Me = _Fit.Me;\n    // if there user is not logged in or not signed up, direct user to login.\n    if(!_Fit.Me){\n      _Router.navigate(['/login']);\n    } \n    setInterval(()=> this.refreshList(), 1000)\n    \n\n  }\n\n  ngOnInit() {\n\n    }\n    \n  \n\n  refreshList(){\n    // refresh Me object - receive Notice, FriendList, Requested status to update\n    if(this.Me){\n\n      this._Fit.refreshMe().subscribe(data => {\n        this.Me.Notice = data.Notice;\n        this.Me.FriendList = data.FriendList;\n        this.Me.Requested = data.Requested;\n      });\n  \n    \n\n      // create other users list to share and refresh to update\n      this._Fit.getUserList().subscribe(data => {\n        this.Me.EachShare = data;\n        // remove myself from the share list\n        this.Me.EachShare.splice(this.Me.EachShare.indexOf(this.Me.EachShare.find(x=> x.Name == this.Me.Name)), 1);\n        // if a user send a friend request, remove that friend from the user list.\n        if((this.Me.EachShare.indexOf(this.Me.EachShare.find(x=> x.RequestSent == true)))!= -1){\n          this.Me.EachShare.splice(this.Me.EachShare.indexOf(this.Me.EachShare.find(x=> x.RequestSent == true)), 1);\n        }\n      });\n    }\n  }\n\n  // Send a friend request via friend's name\n  friendRequest(e: MouseEvent, friendName: string){\n    var sendRequest = true;\n    this._Fit.changeSentRequest(friendName, sendRequest);\n    this._Fit.friendRequest(friendName);\n  }\n\n  // Accept or Decline Friend's request. \n  requestBox(e: MouseEvent, friendName: string) {\n    var friend = this.Me.Notice.find(x=>x.Friend == friendName);\n    // accept request\n    if (confirm(friend.Msg + '\\nHit Ok to Accept or Cancel to Decline.')) {\n        this._Fit.addFriendList(friendName);\n        \n    } else {\n      // dismiss request\n       var decline = false;\n       this._Fit.changeSentRequest(friendName, decline);\n        return;\n    }\n    // change the request state of Me\n    this._Fit.changeRequested(this.Me.Name);\n  }\n\n  // update friend's history if hits Display button\n  friendHistory(e: MouseEvent, friend: string){\n    this._Fit.addFriendHistory(friend);\n  }\n\n  // display friend's history if date is selected\n  displayHistory(e: MouseEvent, key: string, friend: string){\n    this._Fit.getFriendSummary(key, friend);\n  }\n\n  // Type ahead implementation (In-class Final)\n  /* search = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n      map(term => term.length < 2 ? []\n        : states.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n    ); */\n    search(text$){\n      console.log(text$);\n      this._Fit.search(text$)\n      .debounceTime(200)\n      .distinctUntilChanged()\n      .subscribe(\n        \n        // data => this.term = data;\n          \n      );\n    }\n  }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/share/share.component.ts","module.exports = \".login-form{\\n    margin-top: 10px;\\n    margin-bottom: 2px;\\n    \\n}\\n\\n.btn{\\n    margin-top: 2px;\\n    margin-bottom: 5px;\\n\\n    color: white;\\n    background-color: #F4C3D8;\\n    border: none;\\n}\\n\\n.card{\\n    margin: 10px;\\n    color: #1C5F93;\\n}\\n\\n.card-header{\\n    background-color: #7CACEA;\\n    text-align: center;\\n    border: none;\\n    padding: 1.7rem 0;\\n    font-size: 30px;\\n    color: white;\\n    \\n    \\n}\\n\\nform{\\n    padding: 1rem;\\n}\\n\\n.text-uppercase{\\n    font-size: 12px;\\n    color: white;\\n}\\n\\n.title{\\n    font-size: 20px;\\n    \\n    padding: 0.4rem 0.4rem;\\n}\\n\\n.black{\\n    margin-top: 10px;\\n    margin-bottom: 2px;\\n    color: #7CACEA;\\n}\\n\\n.font-margin{\\n    margin-bottom: 5px;\\n    margin-left: 10px;\\n}\\n\\n.btn-margin{\\n    margin:0px;\\n}\\n\\n.col-sm-2{\\n    margin: 2px;\\n    padding: 0.2rem;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sign-up/sign-up.component.css\n// module id = ./src/app/sign-up/sign-up.component.css\n// module chunks = main","module.exports = \"<!-- user sign up here -->\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <div class=\\\"card text-center\\\" style =\\\"width: 30rem\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"text-uppercase title\\\">Welcome!</div>\\n        </div>\\n        <div class=\\\"text-uppercase black\\\">New to Here?</div>\\n        <div class=\\\"font-margin \\\">\\n            Please Sign Up\\n        </div>  \\n        <div class=\\\"login-form\\\" >\\n            <input #Name type =\\\"text\\\" placeholder =\\\"User Name\\\" /><br/>\\n            <input #Password type =\\\"password\\\" placeholder =\\\"Password\\\" />\\n        </div>\\n\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-sm-2\\\">\\n                <button class=\\\" btn btn-margin\\\" (click)=\\\"newUser(Name.value, Password.value)\\\" >Sign Up</button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-link\\\">\\n            <div class =\\\"text-uppercase black\\\">\\n                Already a User?\\n            </div>\\n            \\n            <button type=\\\"button\\\" class=\\\"btn btn-sm\\\">\\n                <div class=\\\"nav-link\\\" routerLink=\\\"/login\\\" >\\n                    Go to Sign In\\n                </div> \\n            </button>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sign-up/sign-up.component.html\n// module id = ./src/app/sign-up/sign-up.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FitService } from '../services/fit.service';\nimport { User } from \"../models/exercise\";\nimport { MessagesService } from '../services/messages.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  Me: User;\n  constructor( private _Fit: FitService, private _Messages: MessagesService) { \n    this.Me = _Fit.Me;\n    \n  }\n\n  ngOnInit() {\n  }\n\n  // send name and password to Service to create a new user\n    newUser(name: string, password: string){\n      if(!name || !password){\n        alert('Please Enter Username and Password');\n        return;\n      }\n        this._Fit.signUp(name, password);\n       this._Messages.Messages.push('Successfully Signed Up! Welcome, ' + name + '!');\n    }\n  \n \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sign-up/sign-up.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}