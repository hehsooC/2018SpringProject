{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/edit-profile/edit-profile.component.css","./src/app/edit-profile/edit-profile.component.html","./src/app/edit-profile/edit-profile.component.ts","./src/app/fit/fit.component.css","./src/app/fit/fit.component.html","./src/app/fit/fit.component.ts","./src/app/history/history.component.css","./src/app/history/history.component.html","./src/app/history/history.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/messages/messages.component.css","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/models/exercise.ts","./src/app/nav/nav.component.css","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/profile/profile.component.css","./src/app/profile/profile.component.html","./src/app/profile/profile.component.ts","./src/app/services/fit.service.ts","./src/app/services/messages.service.ts","./src/app/share/share.component.css","./src/app/share/share.component.html","./src/app/share/share.component.ts","./src/app/sign-up/sign-up.component.css","./src/app/sign-up/sign-up.component.html","./src/app/sign-up/sign-up.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \".center{\\n    margin: 0 auto;\\n    max-width: 100%;\\n    width: 1000px;\\n    padding: 1rem;\\n    -ms-flex-line-pack: center;\\n        align-content: center;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-nav></app-nav> <!-- Navigation Bar -->\\n<div class = \\\"container\\\">\\n  <app-messages></app-messages> <!-- Messages -->\\n  <router-outlet></router-outlet>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { HomeComponent } from './home/home.component';\nimport { FitComponent } from './fit/fit.component';\nimport { MessagesService } from './services/messages.service';\nimport { FitService } from './services/fit.service';\nimport { ShareComponent } from './share/share.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { HistoryComponent } from './history/history.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    MessagesComponent,\n    HomeComponent,\n    FitComponent,\n    ShareComponent,\n    LoginComponent,\n    SignUpComponent,\n    ProfileComponent,\n    EditProfileComponent,\n    HistoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    RouterModule.forRoot([\n        { path: 'home', component: HomeComponent },\n        { path: 'fit', component: FitComponent },\n        { path: 'share', component: ShareComponent },\n        { path: 'login', component: LoginComponent },\n        { path: 'sign-up', component: SignUpComponent },\n        { path: 'profile', component: ProfileComponent },\n        { path: 'editProfile', component: EditProfileComponent },\n        { path: 'history', component: HistoryComponent },\n        { path: '', redirectTo: '/home', pathMatch: 'full'}\n\n    ])\n  ],\n  providers: [MessagesService, FitService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \".login-form{\\n    margin: 10px;\\n}\\n\\n.btn-own{\\n    margin: 15px;\\n    color: white;\\n    background-color: #F4C3D8;\\n    border: none;\\n}\\n\\nul{\\n    list-style-type: none;\\n    margin: 10px;\\n}\\n\\n.card{\\n    margin: 10px;\\n    color: #1C5F93;\\n}\\n\\n.card-header-own{\\n    background-color: #7CACEA;\\n    height: 120px;\\n    text-align: center;\\n    border: none;\\n    padding: 1.7rem 0;\\n    font-size: 30px;\\n    color: white;\\n    \\n    \\n}\\n\\n.textWrap{\\n    height: 150px;\\n   padding: 1.2rem;\\n}\\n\\nform{\\n    padding: 1rem;\\n}\\n\\n.subtitle{\\n    font-size: 15px;\\n    margin: 1px;\\n    font-weight: 300;\\n    \\n}\\n\\n.text-uppercase-own{\\n    text-transform: uppercase;\\n    font-size: 12px;\\n    color: white;\\n}\\n\\n.title{\\n    font-size: 20px;\\n    padding: 0.4rem 0rem;\\n}\\n\\n.black{\\n    margin-top: 10px;\\n    margin-bottom: 2px;\\n    margin-left: 10px;\\n    color: #7CACEA;\\n}\\n\\n.selected{\\n    background-color:#FBE9C1;\\n}\\n\\n.font-margin{\\n    margin-bottom: 5px;\\n    margin-left: 10px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit-profile/edit-profile.component.css\n// module id = ./src/app/edit-profile/edit-profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card\\\" >\\n    <div class=\\\"card-header-own\\\">\\n        <div class=\\\" text-uppercase\\\">\\n        {{Me.Name}}'s Profile\\n        </div>\\n        <div class=\\\"text-uppercase-own\\\">Edit your profile or set your new goal</div> \\n    </div>\\n    \\n    <div class=\\\"card-body\\\">\\n        <form>\\n            <div class=\\\"form-row\\\">\\n        \\n            <div class=\\\"form-group col-md-4\\\">\\n                <label for=\\\"inputName\\\">Name</label>\\n                <input #name type=\\\"text\\\" readonly class=\\\"form-control\\\" id=\\\"inputName\\\" [value]=\\\"Me.Name\\\">\\n            </div>\\n        \\n            <div class=\\\"form-group col-md-4\\\">\\n                <label for=\\\"inputAge\\\">Age</label>\\n                <input #age type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputAge\\\" [value]=\\\"Me.Profile.Age\\\" placeholder=\\\"Age\\\">\\n            </div>\\n            </div>\\n        \\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"Height\\\">Height</label>\\n                <input #height type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"Height\\\" [value]=\\\"Me.Profile.Height\\\" placeholder=\\\"cm\\\">\\n            </div>\\n        \\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"Weight\\\">Weight</label>\\n                <input #weight type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"Weight\\\" [value]=\\\"Me.Profile.Weight\\\" placeholder=\\\"kg\\\">\\n            </div>\\n        \\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"inputGoalWeight\\\">Goal Weight</label>\\n                <input #goalWeight type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputGoalWeight\\\" [value]=\\\"Me.Profile.GoalWeight\\\" placeholder=\\\"kg\\\">\\n            </div>\\n            </form>\\n        <div>\\n            <button class=\\\"btn btn-primary btn-sm btn-own\\\" (click)=\\\"editing(age.value, weight.value, height.value, goalWeight.value, name.value)\\\">Edit</button>\\n        </div> \\n      </div>\\n</div> \\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit-profile/edit-profile.component.html\n// module id = ./src/app/edit-profile/edit-profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FitService } from '../services/fit.service';\nimport { Fit, User } from '../models/exercise';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n  Me: User;\n\n  constructor(private _Fit: FitService, private _Router: Router\n  ) {\n    this.Me = this._Fit.Me;\n    if(!this.Me){\n      _Router.navigate(['/login']);\n    }\n\n   }\n\n  ngOnInit() {\n  }\n\n  editing(age: number, weight: number, height: number, goalWeight: number, name: string ){\n    const goalBmi = this.calculateBMI(goalWeight, height);\n    const bmi = this.calculateBMI(weight, height);\n    console.log('profile component');\n    this._Fit.profileAdd(age, weight, height, goalWeight, bmi, goalBmi, name);\n  \n  \n  }\n  calculateBMI(weight: number, height: number){\n    return Math.round((weight / height / height * 10000) * 100) / 100;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/edit-profile/edit-profile.component.ts","module.exports = \".login-form{\\n    margin: 10px;\\n}\\n\\n.btn-own{\\n    margin: 5px;\\n    color: white;\\n    background-color: #F4C3D8;\\n    border: none;\\n}\\n\\nul{\\n    list-style-type: none;\\n    margin: 10px;\\n}\\n\\n.card{\\n    margin: 10px;\\n    color: #1C5F93;\\n}\\n\\n.card-header-own{\\n    background-color: #7CACEA;\\n    height: 120px;\\n    text-align: center;\\n    border: none;\\n    padding: 1.7rem 0;\\n    font-size: 30px;\\n    color: white;\\n    \\n    \\n}\\n\\n.heightAdjust{\\n    height: 160px;\\n}\\n\\n.heightAdjust-big{\\n    height: 200px;\\n}\\n\\nform{\\n    padding: 1rem;\\n}\\n\\n.subtitle{\\n    font-size: 15px;\\n    margin: 1px;\\n    margin-bottom: 3px;\\n    font-weight: 300;\\n    padding: 0.2rem;\\n    \\n}\\n\\n.text-uppercase-own{\\n    font-size: 12px;\\n    color: white;\\n}\\n\\n.title{\\n    font-size: 20px;\\n    padding: 0.4rem 0rem;\\n}\\n\\n.black{\\n    margin-top: 10px;\\n    margin-bottom: 2px;\\n    margin-left: 10px;\\n    color: #7CACEA;\\n}\\n\\n.list-group-item-success{\\n    background-color:#FBE9C1;\\n}\\n\\n.font-margin{\\n    margin-bottom: 5px;\\n    margin-left: 10px;\\n}\\n\\n.badge{\\n    margin-left: 5px;\\n}\\n\\n.display-none{\\n    display: none;\\n}\\n\\n.today{\\n    color: white;\\n    font-size: 15px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/fit/fit.component.css\n// module id = ./src/app/fit/fit.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" >\\n    <!-- Create Profile display-->\\n    <div class=\\\"col-md-4\\\">\\n        <div class=\\\"card\\\" >\\n            <div class=\\\"card-header-own text-uppercase\\\">\\n            {{Me.Name}}'s Profile\\n            </div>\\n\\n            \\n            <div class=\\\"card-body\\\">\\n                <form>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"Name\\\" class=\\\"col-sm-10 col-form-label\\\">Name</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"Name\\\" value= {{Me.Name}}>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"Age\\\" class=\\\"col-sm-10 col-form-label\\\">Age</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"Age\\\" value= {{Me.Profile.Age}}>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"Height\\\" class=\\\"col-sm-10 col-form-label\\\">Height</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"Height\\\" value= \\\"{{Me.Profile.Height}} cm\\\"> \\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"Weight\\\" class=\\\"col-sm-10 col-form-label\\\">Weight</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"Weight\\\" value= \\\"{{Me.Profile.Weight}} kg\\\"> \\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"BMI\\\" class=\\\"col-sm-10 col-form-label\\\">BMI</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"BMI\\\" value= {{Me.Profile.BMI}}>\\n                        </div>\\n                    </div>                    \\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"GoalWeight\\\" class=\\\"col-sm-10 col-form-label\\\">Goal Weight</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"GoalWeight\\\" value= \\\"{{Me.Profile.GoalWeight}} kg\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"GoalBMI\\\" class=\\\"col-sm-10 col-form-label\\\">Goal BMI</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                        <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"GoalBMI\\\" value= {{Me.Profile.GoalBMI}}>\\n                        </div>\\n                    </div>  \\n                </form>\\n            </div>\\n        </div> \\n    </div><!-- Saved Profile display ends-->\\n\\n\\n\\n    <div class =\\\"col-md-8\\\">\\n        <div class=\\\"row-md-4\\\">\\n            <div class=\\\"card display-none\\\" [ngClass]=\\\"{'display-none' : Me.Month}\\\">\\n                <div class=\\\" card-header-own \\\">\\n                    <div class=\\\"text-uppercase d-flex justify-content-center\\\" >\\n                        Set Your Date\\n                    </div>\\n                    <div class=\\\" d-flex justify-content-center subtitle\\\">\\n                        Record the Date You Worked Out Or Continue Where You Left\\n                    </div>\\n                </div>\\n                    \\n                    <div class=\\\"card-body d-flex justify-content-center\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col\\\">\\n                                <form>\\n                                    <div class=\\\"row d-flex justify-content-center\\\">\\n                                        <div class=\\\"col\\\">\\n                                            <input #month type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Month\\\">\\n                                        </div>\\n                                        <div class=\\\"col\\\">\\n                                            <input #date type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Date\\\">\\n                                        </div>\\n                                        <div class=\\\"col\\\">\\n                                            <div class=\\\"d-flex justify-content-end\\\">\\n                                                <button class=\\\"btn btn-primary\\\" \\n                                                        type=\\\"submit\\\" \\n                                                        (click)=\\\"addTime($event, month.value, date.value)\\\">\\n                                                    Save\\n                                                </button>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </form>\\n                            </div>\\n                            \\n                        </div>\\n                    </div>\\n                        \\n            </div>\\n        </div>\\n        <div class=\\\"row-md-4\\\">\\n            <div class=\\\"card display-none\\\" [ngClass]=\\\"{'display-none': !Me.Month}\\\" >\\n                <div class=\\\"card-header-own\\\">\\n                    <div class=\\\"text-uppercase\\\">\\n                        Workout List \\n                    </div>\\n                    <div class=\\\"subtitle\\\">Click to add workout to your plan</div>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <form>\\n                        <div class=\\\"form-group\\\">\\n                            <select multiple class=\\\"form-control\\\" id=\\\"exampleFormControlSelect2\\\" >\\n                            <option *ngFor=\\\"let list of ExerciseList\\\" (click)=\\\"submitWorkout($event, list)\\\">\\n                                {{list}}\\n                            </option>\\n                            </select>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n\\n        \\n            <div class=\\\"card display-none\\\" [ngClass]=\\\"{'display-none': !Me.Month}\\\">\\n                <div class=\\\"card-header-own heightAdjust\\\">\\n                    <div class=\\\"text-uppercase today\\\" >\\n                        {{Me.Month}} {{Me.Date}}\\n                    </div>\\n                    <div class=\\\"text-uppercase \\\">\\n                        Workout Plan\\n                    </div>\\n    \\n                    <div class=\\\"subtitle\\\">Add your time and sets.<br/> When you are done, click Done button</div>\\n\\n                </div>\\n                \\n                <div class=\\\"card-body\\\">\\n                    <ul class=\\\"list-group list-group-flush \\\">\\n                        <li *ngFor=\\\"let list of Me.PlanExercise\\\"\\n                            [ngClass]=\\\"{ 'list-group-item-success': list.Chosen }\\\"                            \\n                            class=\\\"list-group-item list-group-flush \\\">\\n                            {{list.Text}}\\n                            <form>\\n                                <div class=\\\"row d-flex justify-content-end\\\">\\n                                    <div class=\\\"col\\\">\\n                                    <input #time type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Minutes\\\">\\n                                    </div>\\n                                    <div class=\\\"col\\\">\\n                                    <input #set type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Sets\\\">\\n                                    </div>\\n                                </div>\\n                            </form>\\n                            <div class=\\\"d-flex justify-content-end\\\">\\n                                <button (click)=\\\"doneExercise($event, list.Text, time.value, set.value)\\\"\\n                                        class=\\\"col-sm-3 btn btn-sm btn-primary\\\">\\n                                        Done\\n                                </button>\\n                            </div>\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n\\n\\n        </div>\\n\\n        <div class = \\\"row-md-4\\\">\\n            <div class=\\\"card tracking display-none\\\" [ngClass]=\\\"{'display-none': !Me.Month}\\\">\\n                <div class=\\\"card-header-own heightAdjust-big date\\\">\\n                    <div class=\\\"subtitle\\\"> Well Done, You Are The Best!  </div>\\n                    <div class=\\\"text-uppercase subtitle\\\">\\n                            You worked out on <br /> {{Me.Month}} {{Me.Date}}\\n                    </div> \\n                    <div class=\\\"text-uppercase\\\">\\n                        Workout Log \\n                    </div> \\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <ul class=\\\"list-group list-group-flush\\\" *ngFor= \\\"let choice of Me.DoneExerciseList\\\">\\n                        <li class=\\\"list-group-item \\\">\\n                            {{choice.Text}}\\n                            <!-- need to individually change total time.-->\\n                            <div>\\n                                <i class=\\\"badge float-right badge-info d-flex justify-content-end\\\" >\\n                                    Total Cycle: {{choice.TotalTime}} min \\n                                </i>\\n                                <i class=\\\"badge float-right badge-light d-flex justify-content-end\\\" >\\n                                    Total Set: {{choice.Set}} times\\n                                </i>\\n                                <i class=\\\"badge float-right badge-light d-flex justify-content-end\\\" >\\n                                    Total Time: {{choice.Time}} min \\n                                </i>\\n                            </div>\\n                            \\n                        </li>\\n                    </ul>\\n                    <div class=\\\"card-body\\\">\\n                        <i>\\n                            Your Total Workout Time: {{Me.TotalSetTime}} minutes\\n                        </i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row-md-4 display-none \\\" [ngClass]=\\\"{'display-none' : !Me.Month}\\\">\\n            <div class=\\\"card-body \\\" style=\\\"border: 1px solid #7CACEA\\\" >\\n                <div class=\\\"d-flex justify-content-center\\\"> Ready to track another workout? </div>\\n                <div class=\\\"d-flex justify-content-center\\\">Reset your Workout List!</div>\\n                <div class=\\\" d-flex justify-content-center\\\">\\n                    <button class=\\\"btn btn-sm btn-primary\\\">Reset</button>\\n                </div>\\n            </div>\\n        </div>\\n        \\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/fit/fit.component.html\n// module id = ./src/app/fit/fit.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Http } from \"@angular/http\";\nimport {Fit, User } from '../models/exercise';\nimport { MessagesService } from '../services/messages.service';\nimport { FitService } from '../services/fit.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-fit',\n  templateUrl: './fit.component.html',\n  styleUrls: ['./fit.component.css']\n})\nexport class FitComponent implements OnInit {\n\n    Model: Fit;\n    Me: User;\n    ExerciseList: string[];\n    // date: Date;\n    // added: boolean = false;\n\n  constructor(private http: Http,\n              private _Messages: MessagesService,\n              private _Fit: FitService,\n              private _Router: Router\n) {\n    this.Me = _Fit.Me;\n    this.Model = _Fit.Model;\n    \n    this.ExerciseList = _Fit.ExerciseStack;\n    if(!this.Me){\n      _Router.navigate(['/login']);\n    } \n     // setInterval(()=> this.refreshList(), 1000);\n    \n    //  this.date = new Date();\n\n\n  } \n\n  ngOnInit() {\n  }\n\n\n  refreshList(){\n   \n   /*    this._Fit.getDay().subscribe(data=>{\n        this.Me.Date = data;\n      })\n      this._Fit.getMonth().subscribe(data=>{\n        this.Me.Month = data;\n      })\n    */\n      /* this._Fit.getUserStatus().subscribe(data=>{\n        this.Me = data;\n      })  */\n    \n\n  }\n\n\n\n  // Record the month and the date ((user input)) of completed workout\n  addTime(e: MouseEvent, month: any, date: number){\n    e.preventDefault();\n    while(true){\n      if(month == 1){\n        month = 'January';\n        break;\n      }else if(month == 2){\n        month = 'February';\n        break;\n      }else if(month == 3){\n        month = 'March';\n        break;\n      }else if(month == 4){\n        month = 'April';\n        break;\n      }else if(month == 5){\n        month = 'May';\n        break;\n      }else if(month == 6){\n        month = 'June';\n        break;\n      }else if(month == 7){\n        month = 'July';\n        break;\n      }else if(month == 8){\n        month = 'August';\n        break;\n      }else if(month == 9){\n        month = 'September';\n        break;\n      }else if(month == 10){\n        month = 'October';\n        break;\n      }else if(month == 11){\n        month = 'November';\n        break;\n      }else if(month == 12){\n        month = 'December';\n        break;\n      }else{\n        alert('Please input between 1 - 12');\n        break;\n      }\n    }\n\n    var key = month +'/'+date;\n    var user = this.Me;\n    // user.Month = month;\n    // user.Date = date;\n    //if the recorded day already exists, set recorded day to a user\n    if(!user.History.find(x => x.KeyDate == key)){\n      console.log('_comp_ history not found, create one');\n      user.Month = month;\n      user.Date = date;\n      user.History.push({ Name: this.Me.Name, DoneExerciseList: this.Me.DoneExerciseList, PlanExercise: this.Me.PlanExercise, TotalSetTime: this.Me.TotalSetTime, \n        Month: month, Date: date, KeyDate: key.toString()});\n      this._Fit.SetDay(user, key);\n\n    }\n    else{\n      //this.Me.Month = month;\n      //this.Me.Date = date;\n      //var i = this.Me.History.find(x=> x.KeyDate == key).indexOf(key);\n      console.log('_comp_history found, return one');\n      var result = this.Me.History.find(x => x.KeyDate == key);\n      console.log('_comp_ History exist is');\n      console.log(result);\n      this.Me.Month = result.Month;\n      this.Me.Date = result.Date;\n      this.Me.DoneExerciseList = result.DoneExerciseList;\n      this.Me.PlanExercise = result.PlanExercise;\n      this.Me.TotalSetTime = result.TotalSetTime;\n      this._Fit.SetDay(user, key);\n\n      \n\n  \n    }\n    // create a history for specific month and date\n    // var monthMatch = user.History.find(x=>x.Month == month);\n    // var dateMatch = user.History.find(x=>x.Date == date);\n    /* if(!monthMatch){\n        user.History.push({ Name: this.Me.Name, DoneExerciseList: [], PlanExercise: [], TotalSetTime: null, \n            Month: month, Date: date, KeyDate: key.toString()});\n    }\n    else{\n        // if the specific date history already existed, don't create a new one, but find this history and return it to user.\n        if(dateMatch){\n            console.log('datematch is ');\n            console.log(dateMatch);\n            this.Me.History = dateMatch;\n          }\n\n        else{\n            console.log('no history found');\n        }\n    }\n */\n    // instead of this, how to disable date setting until user resets the list?\n    // this.added = !this.added;\n\n  }\n\n  submitWorkout(e: MouseEvent, text: string){\n    e.preventDefault();\n    var key = this.Me.Month+'/'+this.Me.Date;\n    if(this.Me.PlanExercise.find(y => y.Text == text)){\n      return;\n    }\n    else{\n      this.Me.PlanExercise.push({Text: text, Chosen: false});\n      \n    }\n\n    if(!this.Me.History.find(x => x.KeyDate == key)){\n      console.log('_comp_ history not found, create plan');\n      \n      this.Me.History.find(x=> x.KeyDate == key).PlanExercise = this.Me.PlanExercise;\n\n    }\n    else{\n      console.log('_comp_history found, return plan');\n      var result = this.Me.History.find(x => x.KeyDate == key);\n      this.Me.Month = result.Month;\n      this.Me.Date = result.Date;\n      this.Me.DoneExerciseList = result.DoneExerciseList;\n      this.Me.PlanExercise = result.PlanExercise;\n      this.Me.TotalSetTime = result.TotalSetTime;\n    }\n    this._Fit.chooseExercise(text);\n    this._Fit.planHistory(text, key);\n    \n  }\n\n /* doneExercise() will track the completed workout that a user checks it as \"done\"\n    */\n  doneExercise(e: MouseEvent, text: string, time: number, set: number){\n    e.preventDefault();\n    // fix this to client -> server\n    this._Fit.makeChosen(text);\n    var key = this.Me.Month+'/'+this.Me.Date;\n    var totalTime = time * set;\n\n    // if the workout list is a newly selected, add it to DoneExerciseList\n    if(!this.Me.DoneExerciseList.find( x=> x.Text == text)){\n      this.Me.DoneExerciseList.push({Text:text, Time:time, Set:set, TotalTime:totalTime});\n\n      // tracking the total workout time \n      this.Me.TotalSetTime = Number(this.Me.TotalSetTime) + Number(totalTime);\n    \n      this._Fit.getTotalTime(this.Me, key, this.Me.TotalSetTime);\n      this._Fit.selectExercise(this.Me.DoneExerciseList);\n      \n      \n    }\n    // else if user adds more time and set of the selected workout, keep tracking of time, set, and Total time\n    else{\n      \n      var user = this.Me.DoneExerciseList.find(x=> x.Text == text);\n\n      // keep tracking of total workout time\n      user.Time = Number(user.Time) + Number(time);\n      user.Set = Number(user.Set) + Number(set);\n      user.TotalTime = Number(user.TotalTime) + Number(totalTime);\n      this.Me.TotalSetTime = Number(this.Me.TotalSetTime) + Number(totalTime);\n      this._Fit.getTotalTime(this.Me, key, this.Me.TotalSetTime);\n      this._Fit.selectExercise(this.Me.DoneExerciseList);\n      //this._Fit.putHistory(this.Me.DoneExerciseList);\n      \n    }\n\n    var key = this.Me.Month+'/'+this.Me.Date;\n\n    if(this.Me.History.find(x => x.KeyDate == key)){\n      this.Me.History.find(x => x.KeyDate == key).Name = this.Me.Name;\n      this.Me.History.find(x => x.KeyDate == key).DoneExerciseList = this.Me.DoneExerciseList;\n      this.Me.History.find(x => x.KeyDate == key).PlanExercise = this.Me.PlanExercise;\n      this.Me.History.find(x => x.KeyDate == key).TotalSetTime = this.Me.TotalSetTime;\n      this.Me.History.find(x => x.KeyDate == key).Month = this.Me.Month;\n      this.Me.History.find(x => x.KeyDate == key).Date = this.Me.Date;\n      this._Fit.RecordDay(this.Me, key);\n\n\n    }\n\n    \n    console.log('_comp_doneEx_this.Me.History');\n    console.log(this.Me.History);\n\n\n\n\n  }\n\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/fit/fit.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/history/history.component.css\n// module id = ./src/app/history/history.component.css\n// module chunks = main","module.exports = \"<p>\\n  history works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/history/history.component.html\n// module id = ./src/app/history/history.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/history/history.component.ts","module.exports = \".btn{\\n    margin-top: 10px;\\n}\\n.center{\\n    margin: 0 auto;\\n    max-width: 100%;\\n    width: 100px;\\n    padding: 1rem;\\n}\\n.list{\\n    list-style-type: none;\\n}\\n.center-img{\\n\\n    display: block;\\n    margin-left: auto;\\n    margin-right: auto;\\n    width: 500px;\\n}\\n.lead{\\n    color:  #1C5F93;\\n}\\n@media only screen and (max-width: 480px) {\\n    /*change to vertical nav bar*/\\n    .navbar{\\n        \\n    }\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<!--Need to find health info database api-->\\n<!-- <div class=\\\"card\\\">\\n    <img class=\\\"card-img-top card-img-bottom\\\" *ngIf=\\\"Model.HealthInfo\\\" [src]=\\\"Model.HealthInfo.url\\\" /> \\n    <div class = \\\"card-img-overlay\\\" style=\\\"text-align: center\\\">\\n      <button class=\\\"btn btn-success btn-lg\\\" (click)=\\\"getHealthInfo($event)\\\">\\n              Get Health Information\\n      </button>\\n    </div>\\n</div> \\n -->\\n\\n<div class=\\\"jumbotron\\\">\\n  <h1 class=\\\" d-flex justify-content-center display-4\\\">Welcome to Fitness Tracker!</h1>\\n  <div class=\\\"d-flex justify-content-center\\\">\\n    <p class=\\\"lead\\\">This is a simple fitness tracker app. You can use it as if it's your workout journal! </p>\\n  </div>\\n  <div class=\\\"d-flex justify-content-center\\\">\\n    <p class=\\\"lead\\\">You can record your date and workout lists to be proud of your awesome achievement!</p>\\n  </div>\\n  <hr class=\\\"my-4\\\">\\n  <img src=\\\"https://images.pexels.com/photos/864990/pexels-photo-864990.jpeg?cs=srgb&dl=active-adult-aerobic-864990.jpg&fm=jpg\\\" \\n      class = \\\"center-img\\\">\\n  <span class=\\\"d-flex justify-content-center\\\">\\n      <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\\n  </span>\\n  <span class=\\\"d-flex justify-content-center\\\">\\n    <a class=\\\"btn btn-primary btn-lg\\\" href=\\\"/sign-up\\\" role=\\\"button\\\">Get Started</a>\\n  </span>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Http } from \"@angular/http\";\nimport {Fit, User } from '../models/exercise';\nimport { FitService } from '../services/fit.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  Me: User;\n  private _api = \"http://localhost:8080/fit\";\n\n  constructor(private http: Http, private _Fit: FitService) {\n    this.Me = _Fit.Me;\n    // setInterval(()=> this.refresh(), 1000)\n  }\n\n  \n  ngOnInit() {\n  }\n\n  // refresh(){\n  //   this.http.get(this._api + \"/state\")\n  //       .subscribe(data=> this.Me = data.json())\n  // }\n  /** Need to find health info database api\n   getHealthInfo(e: MouseEvent){\n     this.http.post(this._api + \"/exercise/info\", {})\n     .subscribe();\n   }\n*/\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \".login-form{\\n    margin-top: 10px;\\n    margin-bottom: 2px;\\n    \\n}\\n\\n.btn{\\n    margin-top: 2px;\\n    margin-bottom: 5px;\\n\\n    color: white;\\n    background-color: #F4C3D8;\\n    border: none;\\n}\\n\\nul{\\n    list-style-type: none;\\n    margin: 10px;\\n}\\n\\n.card{\\n    margin: 10px;\\n    color: #1C5F93;\\n}\\n\\n.card-header{\\n    background-color: #7CACEA;\\n    height: 120px;\\n    text-align: center;\\n    border: none;\\n    padding: 1.7rem 0;\\n    font-size: 30px;\\n    color: white;\\n    \\n    \\n}\\n\\nform{\\n    padding: 1rem;\\n}\\n\\n.subtitle{\\n    font-size: 15px;\\n    margin: 1px;\\n    font-weight: 300;\\n    \\n}\\n\\n.text-uppercase{\\n    font-size: 12px;\\n    color: white;\\n}\\n\\n.title{\\n    font-size: 20px;\\n    \\n    padding: 0.4rem 0.4rem;\\n}\\n\\n.black{\\n    margin-top: 10px;\\n    margin-bottom: 2px;\\n    color: #7CACEA;\\n}\\n\\n.selected{\\n    background-color:#FBE9C1;\\n}\\n\\n.font-margin{\\n    margin-bottom: 5px;\\n    margin-left: 10px;\\n}\\n\\n.btn-margin{\\n    margin:0px;\\n}\\n\\n.col-sm-2{\\n    margin: 2px;\\n    padding: 0.2rem;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-flex justify-content-center\\\">\\n    <div class=\\\"card text-center\\\" style=\\\"width: 30rem\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"text-uppercase title\\\">Please Sign In</div>\\n        </div>\\n        <div class =\\\"text-uppercase black\\\">\\n            Already a user? \\n        </div>\\n        <div class=\\\"font-margin\\\">\\n            Please Sign In\\n        </div> \\n        <div class=\\\"login-form\\\" >\\n            <input #Name type =\\\"text\\\" placeholder =\\\"User Name\\\"/><br/>\\n            <input #Password type =\\\"text\\\" placeholder =\\\"Password\\\" />\\n        </div>\\n    \\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-sm-2\\\">\\n                <button class=\\\" btn btn-margin\\\" (click)=\\\"login(Name.value, Password.value)\\\" >Sign In</button>\\n            </div>\\n            <div class=\\\"col-sm-2\\\">\\n                <button class=\\\"btn btn-margin\\\" (click)=\\\"googleLogin()\\\" >Sign In with Google</button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-link\\\">\\n            <div class =\\\"text-uppercase black\\\">\\n                New to Here?\\n            </div>\\n            \\n            <button type=\\\"submit\\\" class=\\\"btn btn-sm\\\">\\n                <div class=\\\"nav-link\\\" routerLink=\\\"/sign-up\\\" >\\n                    Please Sign Up\\n                </div> \\n            </button>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FitService } from '../services/fit.service';\nimport { Fit } from '../models/exercise';\nimport { MessagesService } from '../services/messages.service';\n\ndeclare var googleyolo: any\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  Model = new Fit();\n  constructor(private _Fit: FitService, private _Messages: MessagesService) { }\n\n  ngOnInit() {\n  }\n\n  login(name:string, password: string){\n    this._Fit.login(name, password);\n  }\n\n  /* googleLogin(){\n    googleyolo.hint({\n      supportedAuthMethods: [\n        \"https://accounts.google.com\",\n       // \"googleyolo://id-and-password\"\n      ],\n      supportedIdTokenProviders: [\n        {\n          uri: \"https://accounts.google.com\",\n          clientId: \"224672501632-b59a192aifnt8s107nllt1kdognsjejv.apps.googleusercontent.com\"\n        }\n      ]\n    }).then((credentials: any) => {\n      this._Fit.oAuthLogin(credentials.displayName, credentials.idToken, credentials.profilePicture);\n      console.log(credentials);\n    })\n  } */\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \"#messages {\\n    padding-top: 0.5rem;\\n    padding-left: 0.2rem;\\n    \\n}\\n\\n.button {\\n    margin-left: 5px;\\n    color: #1C5F93;\\n    font-weight: bold;\\n    float: right;\\n    font-size: 22px;\\n    line-height: 20px;\\n    cursor: pointer;\\n    -webkit-transition: 0.3s;\\n    transition: 0.3s;\\n}\\n\\n.button:hover {\\n    color: black;\\n    cursor: pointer;\\n}\\n\\n.alert{\\n    padding: 10px;\\n    border: 2px solid #CFD5E1;\\n    color: #1C5F93;\\n    margin-bottom: 15px;\\n}\\n\\n.msg{\\n    list-style-type: none;\\n    padding-top: 0.2rem;\\n    padding-left: 0.2rem;\\n    padding-bottom: 0.2rem;\\n}\\n\\nh3{\\n    text-align: center;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/messages/messages.component.css\n// module id = ./src/app/messages/messages.component.css\n// module chunks = main","module.exports = \"<div id=\\\"messages\\\">\\n  <div class=\\\"alert\\\" *ngFor=\\\"let msg of Messages.Messages; let i = index;\\\">\\n    <!-- Binding-->\\n    <button class=\\\"close\\\" (click) = \\\"delete(i)\\\"> <!-- javascript-->\\n      &times;\\n    </button>\\n\\n    {{msg}}\\n    \\n    \\n  </div><!-- Alert -->\\n</div><!--messages-->\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/messages/messages.component.html\n// module id = ./src/app/messages/messages.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MessagesService } from '../services/messages.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public Messages: MessagesService) { \n  }\n\n  ngOnInit() {\n  }\n\n  delete( i: number ){\n    this.Messages.Messages.splice(i, 1);\n\n  } \n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/messages/messages.component.ts","export class Fit {\n    \n    Person: User[] = [];\n\n    Share: People[] = [];\n    \n    /** Need to find health info database api\n    HealthInfo: {\n        url: string;\n    }\n    */\n \n \n}\n\n\n\nexport class User {\n    Name: string;\n    Password: string;\n    Profile: Info;\n    PlanExercise: Exercise[] = [];\n    DoneExerciseList: Done[] = [];\n    Record: Done[] = [];\n    TotalSetTime: number;\n    EachShare: People[] = [];\n    Notice: Friend[];\n    Requested: boolean;\n    FriendList: People[] =[];\n    History: Log[] = [];\n    Month: any;\n    Date: number;\n    \n}\nexport class Log{\n    Name: string;\n    DoneExerciseList: Done[] = [];\n    PlanExercise: Exercise[] = [];\n    TotalSetTime: number;\n    Month: any;\n    Date: number;\n    // Reset: boolean;\n    KeyDate: string;\n\n\n}\nexport class People {\n    Name: string;\n    FriendRequest: boolean;\n\n    \n}\n\nexport class Friend{\n    Name: string;\n    Friend: string;\n    Msg: string;\n}\n\nexport class Exercise {\n    Text: string;\n    Chosen: boolean = false;\n}\n\nexport class Done {\n    Text: string;\n    Time: number;\n    Set: number;\n    TotalTime: number;\n\n}\n\nexport class Info {\n    Age: number;\n    Weight: number;\n    Height: number;\n    GoalWeight: number;\n    BMI: number;\n    GoalBMI: number;\n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/exercise.ts","module.exports = \".navbar {\\n    padding: 0 1rem;\\n    height: 120px;\\n  }\\n  \\n  .nav-back{\\n    background-color: #7CACEA;\\n}\\n  \\n  .navbar-brand{\\n  font-size: 20px;\\n}\\n  \\n  .navbar-nav\\n{\\n  font-size:20px;\\n \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/nav/nav.component.css\n// module id = ./src/app/nav/nav.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-dark nav-back\\\">\\n  <div class=\\\"container\\\">\\n    <div>\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"/fit\\\">Fitness Tracker</a>\\n    </div>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse navbar-nav\\\" id=\\\"#navbarNav\\\">\\n      <ul class=\\\"navbar-nav navbarNav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" >Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/editProfile\\\" routerLinkActive=\\\"active\\\" >Profile</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/fit\\\" routerLinkActive=\\\"active\\\" >Fitness</a>\\n        </li>\\n  \\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/share\\\" routerLinkActive=\\\"active\\\">Share</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/history\\\" routerLinkActive=\\\"active\\\">History</a>\\n        </li>\\n\\n      </ul>\\n    </div>\\n\\n    \\n\\n    <div class=\\\"d-flex justify-content-end\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item \\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/sign-up\\\" routerLinkActive=\\\"active\\\">Sign Up</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Sign In</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div><!-- navbar container -->\\n</nav><!-- nav bar -->\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/nav/nav.component.html\n// module id = ./src/app/nav/nav.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FitService } from '../services/fit.service';\nimport { User } from '../models/exercise';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  constructor(private _Fit: FitService) { \n  \n  }\n\n  ngOnInit() {\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/nav/nav.component.ts","module.exports = \".login-form{\\n    margin: 10px;\\n}\\n\\n.btn-own{\\n    margin: 15px;\\n    color: white;\\n    background-color: #F4C3D8;\\n    border: none;\\n}\\n\\nul{\\n    list-style-type: none;\\n    margin: 10px;\\n}\\n\\n.card{\\n    margin: 10px;\\n    color: #1C5F93;\\n}\\n\\n.card-header-own{\\n    background-color: #7CACEA;\\n    height: 120px;\\n    text-align: center;\\n    border: none;\\n    padding: 1.7rem 0;\\n    font-size: 30px;\\n    color: white;\\n    \\n    \\n}\\n\\n.textWrap{\\n    height: 150px;\\n   padding: 1.2rem;\\n}\\n\\nform{\\n    padding: 1rem;\\n}\\n\\n.subtitle{\\n    font-size: 15px;\\n    margin: 1px;\\n    font-weight: 300;\\n    \\n}\\n\\n.text-uppercase-own{\\n    text-transform: uppercase;\\n    font-size: 12px;\\n    color: white;\\n}\\n\\n.title{\\n    font-size: 20px;\\n    padding: 0.4rem 0rem;\\n}\\n\\n.black{\\n    margin-top: 10px;\\n    margin-bottom: 2px;\\n    margin-left: 10px;\\n    color: #7CACEA;\\n}\\n\\n.selected{\\n    background-color:#FBE9C1;\\n}\\n\\n.font-margin{\\n    margin-bottom: 5px;\\n    margin-left: 10px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/profile.component.css\n// module id = ./src/app/profile/profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card\\\"  >\\n  <div class=\\\"card-header-own\\\">\\n  <div class=\\\"text-uppercase-own\\\">Please Create Your Profile Before Tracking Your Workout!</div> \\n  <div class=\\\"text-uppercase\\\">Profile</div>\\n  \\n\\n  </div>\\n  <form>\\n      <div class=\\\"form-row\\\">\\n  \\n      <div class=\\\"form-group col-md-4\\\">\\n          <label for=\\\"inputName\\\">Name</label>\\n          <input #name type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputName\\\" [value]=\\\"Me.Name\\\">\\n      </div>\\n  \\n      <div class=\\\"form-group col-md-4\\\">\\n          <label for=\\\"inputAge\\\">Age</label>\\n          <input #age type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputAge\\\" placeholder=\\\"Age\\\" >\\n      </div>\\n      </div>\\n  \\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"inputHeight\\\">Height</label>\\n          <input #height type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputHeight\\\" placeholder=\\\"cm\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"inputWeight\\\">Weight</label>\\n          <input #weight type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputWeight\\\" placeholder=\\\"kg\\\">\\n      </div>\\n  \\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoalWeight\\\">Goal Weight</label>\\n          <input #goalWeight type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputGoalWeight\\\" placeholder=\\\"kg\\\">\\n      </div>\\n      </form>\\n  <div>\\n      <button class=\\\"btn btn-primary btn-sm btn-own\\\" (click)=\\\"adding(age.value, weight.value, height.value, goalWeight.value, name.value)\\\">Save</button>\\n  </div> \\n</div> <!-- Profile Form ends-->\\n\\n\\n\\n        \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/profile.component.html\n// module id = ./src/app/profile/profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FitService } from '../services/fit.service';\nimport { Fit, User } from '../models/exercise';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  Me: User;\n\n  constructor( private _Fit: FitService) {\n    this.Me = this._Fit.Me;\n   }\n\n  ngOnInit() {\n  }\n\n  adding(age: number, weight: number, height: number, goalWeight: number, name: string ){\n    const goalBmi = this.calculateBMI(goalWeight, height);\n    const bmi = this.calculateBMI(weight, height);\n    console.log('profile component');\n    this._Fit.profileAdd(age, weight, height, goalWeight, bmi, goalBmi, name);\n  \n  \n  }\n  calculateBMI(weight: number, height: number){\n    return Math.round((weight / height / height * 10000) * 100) / 100;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/profile/profile.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Fit, User, Info, Exercise, People, Friend } from '../models/exercise';\nimport { Router } from '@angular/router';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class FitService {\n\n  private _api = \"http://localhost:8080/fit\";\n\n  ExerciseStack =  [];\n\n  Me: User;\n  Model: Fit;\n  TotalTime: number;\n  \n\n  constructor(private http: Http, \n              private _Router: Router,\n              ) { \n                this.ExerciseStack =  [\n                  \"Squat\",\n                  \"Plank\", \n                   \"Running\",\n                   \"Jump Rope\",\n                   \"Swimming\",\n                   \"Walk\",\n                   \"Aerobic Dance\",\n                   \"Zumba\",\n                   \"Yoga\",\n                   \"Centergy\",\n                   \"Stretching\",\n                   \"Gentle Yoga\",\n                   \"Push Up\"\n                   ];\n //   setInterval(()=> this.refresh(), 1000)\n    \n                \n\n  }\n\n /*  refresh(){\n    this.http.get(this._api + \"/state\")\n        .subscribe(data=> this.Model = data.json())\n  } */\n\n  \n  signUp(name: string, password: string){\n    this.Me = {Name: name, Password: password, Profile: {Age: null, Weight: null, Height: null, GoalWeight: null, BMI: null, GoalBMI: null }, \n    PlanExercise: [], DoneExerciseList: [], Record: [], TotalSetTime: 0, EachShare: [], Notice: [], Requested: false, FriendList: [], History: [],\n    Month: null, Date: null};\n    this.http.get(this._api + \"/exercise\", { params : { name: name, password: password } })\n    .subscribe(data=> {\n      if(!data.json()){\n              // alert user name taken\n        alert(\"User Name is taken, please try different name\");\n        return;\n      }\n      //this.getUserList();\n      this._Router.navigate(['/profile']);\n    })\n     \n      \n    }\n\n\n    /* oAuthLogin(name: string, token: string, pic: string){\n      // this.Me = { Name: name };\n      // this.pic = pic;\n      // this.token = token; \n      this.Me = {Name: name, Password: null, Profile: {Age: null, Weight: null, Height: null, GoalWeight: null, BMI: null, GoalBMI: null }, \n      PlanExercise: [], DoneExerciseList: [], Record: [], TotalSetTime: 0};\n      this._Router.navigate(['/fit']);\n    } */\n  \n    \n  login(name: string, password: string){\n    this.http.get(this._api + \"/exercise/login\", { params : { name: name, password: password } })\n    .subscribe(data=> {\n      var check = data.json()\n      if(!check){\n        alert('Username or Password doesn\\'t match in our system! - service ');\n        return;\n      }\n      this.Me = data.json()\n      this._Router.navigate(['/fit']);\n\n    \n    })\n   \n  }\n\n\n  profileAdd(age: number, weight: number, height: number, goalWeight: number, bmi: number, goalBmi: number, name: string){\n    this.http.post(this._api + \"/exercise/profile\", { Age: age, Weight: weight, Height: height, \n                                                              GoalWeight: goalWeight, BMI: bmi, \n                                                              GoalBMI: goalBmi, name: name})\n    .subscribe(data => {\n        this.Me.Profile = data.json();\n    });\n    this._Router.navigate(['/fit']);\n    \n  }\n\n  // post planned workout list to the server\n  chooseExercise(text: string){\n    this.http.post(this._api + \"/exercise/choose\", {name: this.Me.Name, Text: text})\n              .subscribe(/* data => {\n                if(!data.json()){\n                  return;\n                }\n                this.Me.PlanExercise = data.json();\n              } */);\n\n  }\n  planHistory(text: string, key: string){\n    this.http.post(this._api + \"/exercise/planHistory\", {user: this.Me, Text: text, key: key})\n              .subscribe(/* data => {\n                if(!data.json()){\n                  return;\n                }\n                this.Me.PlanExercise = data.json();\n              } */);\n\n  }\n  \n\n  // set the selected workout list to the server and make Chosen to true\n    makeChosen(text: string){\n      this.http.post(this._api + \"/exercise/chosen\", {name: this.Me.Name, text: text})\n      .subscribe(data => {\n        this.Me.PlanExercise = data.json();\n      })\n    }\n\n\n    // post selected workout to the server\n    selectExercise(done){\n\n      this.http.post(this._api + '/exercise/done', {name: this.Me.Name, list: done })\n                .subscribe(data => {\n                  if(!data.json()){\n                    console.log('done data is false - service');\n                    return;\n                  }\n                });\n    }\n\n\n    // post total workout time to the server\n    getTotalTime(user: User, key: string, totalTime: number){\n      this.http.post(this._api + \"/exercise/totaltime\",{user: user, key: key, totalTime: totalTime})\n      .subscribe(data => {\n        this.Me.TotalSetTime = Number(data.json());\n      })\n    }\n\n    // get the list of other users from the server\n    getUserList(){\n      return this.http.get(this._api + '/exercise/people', { params: {name: this.Me.Name}})\n            .map((response:Response)=>response.json());\n    }\n\n    getRequestState(){\n      return this.http.get(this._api + '/exercise/request/state', {params: {name: this.Me.Name}})\n            .map((response:Response)=>response.json());\n\n    }\n    // Send a request notice to a selected user\n    friendRequest(friendName: string){\n\n      this.http.post(this._api + '/exercise/request', {friend: friendName, name: this.Me.Name})\n      .subscribe();\n      \n\n    }\n\n    addFriendList(friendName:string){\n      \n      this.http.post(this._api+'/exercise/addFriend',{name: this.Me.Name, friend: friendName})\n      .subscribe(data => {\n        this.Me.FriendList = data.json();\n        console.log('FriendList ---');\n        console.log(this.Me.FriendList);\n      });\n      \n    }\n\n    changeRequested(name: string){\n      this.http.post(this._api + '/exercise/changeRequest', {name: name})\n      .subscribe();\n\n      \n    }\n    // set the month and the date of user's log in the server.\n    SetDay(user: User, key: string){\n  /*     console.log('month: ' + month);\n      console.log('date ' + date);\n      var key = month +'/'+date;\n      this.http.post(this._api + '/exercise/setDay', {month: month, date: date, name: this.Me.Name, key: key.toString()})\n      .subscribe(); */\n\n      this.http.post(this._api + '/exercise/setDay', {user: user, key: key})\n      .subscribe();\n    }\n\n    RecordDay(user: User, key: string){\n     /*  var key = month +'/'+date;\n      this.http.post(this._api + '/exercise/recordDay', {name: this.Me.Name, month: month, date: date, key: key.toString() })\n      .subscribe(); */\n      this.http.post(this._api + '/exercise/recordDay', {name: this.Me.Name, user: user, key: key })\n      .subscribe();\n\n\n    }\n\n\n  /*   getDay(){\n      return this.http.get(this._api+'/exercise/getDay', {params:{name: this.Me.Name}})\n      .map((response:Response)=>response.json());\n      \n    }\n    getMonth(){\n      return this.http.get(this._api+'/exercise/getMonth', {params:{name: this.Me.Name}})\n      .map((response:Response)=>response.json());\n      \n    }\n\n    putHistory(done){\n      this.http.post(this._api + '/exercise/recordWorkout', {name: this.Me.Name, done: done})\n      .subscribe();\n    }\n */\n    getUserStatus(){\n      return this.http.get(this._api+'/exercise/user', {params:{name: this.Me.Name}})\n      .map((response:Response)=>response.json());\n\n    }\n  \n\n}\n  \n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/fit.service.ts","import { Injectable } from '@angular/core';\nimport { FitService } from './fit.service';\n\n@Injectable()\nexport class MessagesService {\n\n  Messages = [];\n  constructor(private _Fit: FitService) { \n    this.Messages = ['Complete your Profile before you begin to plan your workout.', 'You can choose your workout plan.'];\n }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/messages.service.ts","module.exports = \"ul{\\n    list-style-type: none;\\n    margin: 10px;\\n}\\n\\n.card{\\n    margin: 10px;\\n    color: #1C5F93;\\n}\\n\\n.card-header{\\n    background-color: #7CACEA;\\n    height: 120px;\\n    text-align: center;\\n    border: none;\\n    padding: 1.7rem 0;\\n    font-size: 30px;\\n    color: white;\\n    \\n    \\n}\\n\\n.btn{\\n    margin-top: 2px;\\n    margin-bottom: 5px;\\n\\n    \\n    \\n}\\n\\n.btn-color{\\n    background-color: #F4C3D8;\\n    border: none;\\n    color: white;\\n}\\n\\n.subtitle{\\n    font-size: 15px;\\n    margin: 1px;\\n    margin-bottom: 10px;\\n    font-weight: 300;\\n    padding: 0.2rem;\\n    \\n}\\n\\n.text-uppercase-own{\\n    font-size: 12px;\\n    color: white;\\n}\\n\\n.heightAdjust{\\n    height: 160px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/share/share.component.css\n// module id = ./src/app/share/share.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row justify-content-md-center\\\">\\n  <button class=\\\"btn btn-color\\\" disabled *ngIf=\\\"!Me.Requested\\\">No Friend Request</button>\\n  <button class=\\\"btn btn-warning\\\"  *ngIf=\\\"Me.Requested\\\" (click)=\\\"requestBox($event)\\\">You Have a Friend Request</button>\\n</div>\\n<div class=\\\"row justify-content-md-center\\\">\\n  <!-- Choose a user to share workout log-->\\n  <div class=\\\"col\\\">\\n      <div class=\\\"card\\\" >\\n          <div class=\\\"card-header heightAdjust\\\">\\n            <div class=\\\"text-uppercase\\\">Users List</div>\\n            <div class=\\\"subtitle\\\"> Please choose a user you want to share your workout summary</div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <ul class=\\\"list-group-item list-group-flush list\\\" *ngFor =\\\" let users of Me.EachShare\\\">\\n                <li  >User Name: {{users.Name}}\\n                  <button class=\\\"btn btn-color btn-sm d-flex justify-content-end\\\" (click) = \\\"friendRequest($event, users.Name)\\\" *ngIf = \\\"!users.Requested\\\"> Request Friend </button>\\n                  <button class=\\\"btn btn-sm btn-light d-flex justify-content-end\\\" disabled *ngIf = \\\"users.Requested\\\"> Requested </button>\\n                </li>\\n    \\n            </ul>\\n          </div>\\n      </div> \\n    </div>\\n\\n  <div class=\\\"col\\\">\\n    <div class=\\\"card\\\" >\\n        <div class=\\\"card-header\\\">\\n          Other user's Workout Achievement\\n        </div>\\n        <ul class=\\\"list-group list-group-flush list\\\">\\n          <li>users name and workout summary will be here</li>\\n        </ul>\\n    </div> \\n  </div>\\n\\n    \\n  <div class=\\\"col\\\">\\n    <div class=\\\"card\\\" >\\n      <div class=\\\"card-header\\\">\\n        <div class=\\\"text-uppercase\\\">\\n          Friends List\\n        </div>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <ul class=\\\"list-group-item list-group-flush list\\\" *ngFor = \\\"let friend of Me.FriendList\\\">\\n          <li > {{friend.Name}}\\n            <button class=\\\"btn btn-sm d-flex justify-content-end\\\" (click) = \\\"acceptFriend()\\\"> Share </button>\\n\\n          </li>\\n        </ul>\\n      </div>\\n    </div> \\n  </div> \\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/share/share.component.html\n// module id = ./src/app/share/share.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Http } from \"@angular/http\";\nimport { FitService } from '../services/fit.service';\nimport {Fit, User, People } from '../models/exercise';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-share',\n  templateUrl: './share.component.html',\n  styleUrls: ['./share.component.css']\n})\n\nexport class ShareComponent implements OnInit {\n  \n  Me: User;\n  \n\n  constructor(private _Fit: FitService, private _Router: Router) { \n    this.Me = _Fit.Me;\n    \n    // if there user is not logged in or not signed up, direct user to login.\n    if(!this.Me){\n      _Router.navigate(['/login']);\n    } \n    setInterval(()=> this.refreshList(), 1000)\n\n\n  }\n\n  ngOnInit() {\n\n    }\n    \n  \n\n  refreshList(){\n\n    // refresh user's data \n    this._Fit.getRequestState().subscribe(data => {\n      this.Me = data;\n    });\n\n    // create other users list to share and refresh to update\n    this._Fit.getUserList().subscribe(data => {\n      this.Me.EachShare = data;\n      // remove myself from the share list\n      this.Me.EachShare.splice(this.Me.EachShare.indexOf(this.Me.EachShare.find(x=> x.Name == this.Me.Name)), 1);\n      //console.log(this.Me.EachShare);\n\n      \n    });\n  }\n\n\n  friendRequest(e: MouseEvent, friendName: string){\n    this._Fit.friendRequest(friendName);\n    /* console.log('friendName is ' + friendName);\n    console.log('###EachShare');\n    console.log(this.Me.EachShare); */\n    // this.Me.EachShare.find(x=> x.Name == friendName).FriendRequest = true;\n\n  }\n\n  \n\n  requestBox(e: MouseEvent) {\n    var friend = this.Me.Notice[0].Friend;\n    console.log('friend name** ' + friend);\n    if (confirm(this.Me.Notice.find(x=>x.Name == this.Me.Name).Msg + '\\n Hit Ok to Accept or Cancel to Decline.')) {\n        this._Fit.addFriendList(friend);\n    } else {\n        // dismiss request\n    }\n    this.Me.Notice.unshift();\n    this._Fit.changeRequested(this.Me.Name);\n\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/share/share.component.ts","module.exports = \".login-form{\\n    margin-top: 10px;\\n    margin-bottom: 2px;\\n    \\n}\\n\\n.btn{\\n    margin-top: 2px;\\n    margin-bottom: 5px;\\n\\n    color: white;\\n}\\n\\nul{\\n    list-style-type: none;\\n    margin: 10px;\\n}\\n\\n.card{\\n    margin: 10px;\\n    color: #1C5F93;\\n}\\n\\n.card-header{\\n    background-color: #7CACEA;\\n    height: 120px;\\n    text-align: center;\\n    border: none;\\n    padding: 1.7rem 0;\\n    font-size: 30px;\\n    color: white;\\n    \\n    \\n}\\n\\nform{\\n    padding: 1rem;\\n}\\n\\n.btn{\\n    background-color: #F4C3D8;\\n    border: none;\\n}\\n\\n.subtitle{\\n    font-size: 15px;\\n    margin: 1px;\\n    font-weight: 300;\\n    \\n}\\n\\n.text-uppercase{\\n    font-size: 12px;\\n    color: white;\\n}\\n\\n.title{\\n    font-size: 20px;\\n    \\n    padding: 0.4rem 0.4rem;\\n}\\n\\n.black{\\n    margin-top: 10px;\\n    margin-bottom: 2px;\\n    color: #7CACEA;\\n}\\n\\n.selected{\\n    background-color:#FBE9C1;\\n}\\n\\n.font-margin{\\n    margin-bottom: 5px;\\n    margin-left: 10px;\\n}\\n\\n.btn-margin{\\n    margin-left:98px;\\n    margin-top: 0px;\\n\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sign-up/sign-up.component.css\n// module id = ./src/app/sign-up/sign-up.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"card text-center\\\" style =\\\"width: 20rem\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"text-uppercase title\\\">Welcome!</div>\\n        </div>\\n            <div class=\\\"text-uppercase black\\\">New to Here?</div>\\n            <div class=\\\"font-margin \\\">\\n                Please Sign Up\\n            </div>  \\n            <div class=\\\"login-form\\\" >\\n                <input #Name type =\\\"text\\\" placeholder =\\\"User Name\\\" /><br/>\\n                <input #Password type =\\\"text\\\" placeholder =\\\"Password\\\" />\\n            \\n            </div>\\n            <div class=\\\"btn-margin\\\">\\n                <button class=\\\"btn\\\" (click)=\\\"newUser(Name.value, Password.value)\\\" >Sign Up</button>\\n            </div>\\n        </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sign-up/sign-up.component.html\n// module id = ./src/app/sign-up/sign-up.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FitService } from '../services/fit.service';\nimport { User } from \"../models/exercise\";\nimport { MessagesService } from '../services/messages.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  loginName: string;\n\n  Me: User;\n  constructor( private _Fit: FitService, private _Messages: MessagesService) { \n    this.Me = _Fit.Me;\n    \n  }\n\n  ngOnInit() {\n  }\n\n\n    newUser(name: string, password: string){\n        this._Fit.signUp(name, password);\n        console.log('Sign Up Yay');\n       // this._Messages.Messages.push('Successfully Signed Up! Welcome, ' + name + '!');\n    }\n  \n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sign-up/sign-up.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}