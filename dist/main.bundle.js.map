{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/fit/fit.component.css","./src/app/fit/fit.component.html","./src/app/fit/fit.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/messages/messages.component.css","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/models/exercise.ts","./src/app/nav/nav.component.css","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \".center{\\n    margin: 0 auto;\\n    max-width: 100%;\\n    width: 1000px;\\n    padding: 1rem;\\n    -ms-flex-line-pack: center;\\n        align-content: center;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-nav></app-nav> <!-- Navigation Bar -->\\n<div class = \\\"container\\\">\\n  <app-messages></app-messages> <!-- Messages -->\\n  <router-outlet></router-outlet>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { HomeComponent } from './home/home.component';\nimport { FitComponent } from './fit/fit.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    MessagesComponent,\n    HomeComponent,\n    FitComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    RouterModule.forRoot([\n        { path: 'home', component: HomeComponent },\n        { path: 'fit', component: FitComponent },\n        { path: '', redirectTo: '/home', pathMatch: 'full'}\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \".login-form{\\n    margin: 10px;\\n}\\n\\n.btn{\\n    margin: 5px;\\n}\\n\\n.card-header{\\n    background-color: rgb(58, 141, 141);\\n    color: white;\\n    font-size: 25px;\\n}\\n\\nul{\\n    list-style-type: none;\\n    margin: 10px;\\n}\\n\\n.card{\\n    margin: 10px;\\n}\\n\\nform{\\n    padding: 1rem;\\n}\\n\\n.card-header{\\n    text-align: center;\\n}\\n\\n.title{\\n    font-size: 35px;\\n    \\n    \\n}\\n\\n.subtitle{\\n    font-size: 22px;\\n    \\n    \\n}\\n\\n.explain{\\n    font-size: 15px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/fit/fit.component.css\n// module id = ./src/app/fit/fit.component.css\n// module chunks = main","module.exports = \"<!-- For First User, this user will be the person who tracks the workout-->\\n<div class=\\\"card\\\" *ngIf=\\\"!Me\\\">\\n    <div class=\\\"card-header\\\">Please Sign Up</div>\\n    <!-- Sign Up Form-->\\n    <div class=\\\"login-form\\\" >\\n        <input #Name /><button class=\\\"btn btn-primary\\\" (click)=\\\"login(Name.value)\\\" >Sign Up</button>\\n    </div>\\n\\n</div> <!-- Log in Form Ends-->\\n\\n<!-- \\n<div class=\\\"card\\\" *ngIf=\\\"Me\\\">\\n    <div class=\\\"card-header\\\">Please Sign In</div>\\n    \\n    <div class=\\\"login-form\\\" >\\n        <input #user /><button class=\\\"btn btn-primary\\\" (click)=\\\"differentUser(user.value)\\\" >Sign In</button>\\n    </div>\\n\\n</div>  -->\\n\\n<div class=\\\"card\\\" *ngIf= \\\" signIn && !finishProfile\\\">\\n    <div class=\\\"card-header\\\">\\n    Please Create Your Profile Before Tracking Your Workout!\\n    </div>\\n    <form>\\n        <div class=\\\"form-row\\\">\\n    \\n        <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"inputName\\\">Name</label>\\n            <input #name type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputName\\\" [value]=\\\"logInName\\\">\\n        </div>\\n    \\n        <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"inputAge\\\">Age</label>\\n            <input #age type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputAge\\\" placeholder=\\\"Age\\\" >\\n        </div>\\n        </div>\\n    \\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"inputHeight\\\">Height</label>\\n            <input #height type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputHeight\\\" placeholder=\\\"cm\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"inputWeight\\\">Weight</label>\\n            <input #weight type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputWeight\\\" placeholder=\\\"kg\\\">\\n        </div>\\n    \\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"inputGoalWeight\\\">Goal Weight</label>\\n            <input #goalWeight type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputGoalWeight\\\" placeholder=\\\"kg\\\">\\n        </div>\\n        </form>\\n    <div>\\n        <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"profileAdd(age.value, weight.value, height.value, goalWeight.value)\\\">Save</button>\\n    </div> \\n</div> <!-- Profile Form ends-->\\n\\n\\n\\n\\n<div class=\\\"row justify-content-md-center\\\" *ngIf = \\\"finishProfile\\\">\\n    <!-- Saved Profile display-->\\n    <div class=\\\"col\\\">\\n        <div class=\\\"card tracking\\\" >\\n            <div class=\\\"card-header\\\">\\n            {{Me.Name}} Profile\\n            </div>\\n            <ul class=\\\"list-group list-group-flush list\\\" *ngFor=\\\"let profile of Model.Profile\\\">\\n            <!-- **ngfor: display profile here** -->\\n                <li>Name: {{Me.Name}}</li>\\n                <li>Age: {{profile.Age}}</li>\\n                <li>Weight: {{profile.Weight}}</li>\\n                <li>BMI: {{profile.BMI}}</li>\\n                <li>Goal Weight: {{profile.GoalWeight}}</li>\\n                <li>Goal BMI: {{profile.GoalBMI}}</li>\\n                \\n            </ul>\\n        </div> <!-- Saved Profile display ends-->\\n    </div>\\n\\n    <!-- who do you want to share?-->\\n    <div class=\\\"col\\\">\\n        <div class=\\\"card tracking\\\" >\\n            <div class=\\\"card-header\\\">\\n            User List\\n            </div>\\n            <ul class=\\\"list-group list-group-flush list\\\">\\n                <li>UserName:\\n                    <button \\n                    class=\\\"btn btn-sm btn-warning\\\">\\n                        Share\\n                    </button>\\n                </li>\\n\\n            </ul>\\n        </div> \\n    </div>\\n\\n    <!-- You're sharing with.. -->\\n    <div class=\\\"col\\\">\\n        <div class=\\\"card tracking\\\" >\\n            <div class=\\\"card-header\\\">\\n            (User's) Workout Achievement\\n            </div>\\n            <ul class=\\\"list-group list-group-flush list\\\">\\n                <li>UserName:</li>\\n\\n            </ul>\\n        </div> \\n    </div>\\n\\n</div>\\n\\n\\n<div class=\\\"row justify-content-md-center\\\" *ngIf=\\\"finishProfile\\\">\\n    <div class=\\\"col  mb-3\\\">\\n        \\n        <div class=\\\"card\\\" >\\n            <div class=\\\"card-header\\\">Workout List </div>\\n            <form>\\n                <div class=\\\"form-group\\\">\\n                  <select multiple class=\\\"form-control\\\" id=\\\"exampleFormControlSelect2\\\" >\\n                    <option *ngFor=\\\"let list of GetExercise.List\\\"  (click)=\\\"submitWorkout($event, list)\\\">\\n                        {{list}}\\n                    </option>\\n                  </select>\\n                </div>\\n              </form>\\n  \\n          </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\" *ngIf=\\\"finishProfile\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card mb-3\\\" >\\n            <div class=\\\"card-header\\\">\\n                <div>\\n                    <div class=\\\"title\\\">Workout Plan</div> <br />\\n                    <div class=\\\"subtitle\\\">Choose Completed Workout<br /></div>\\n                    <div class=\\\"explain\\\">Each workout corresponds to 3 min. workout time</div> \\n                </div>\\n            </div>\\n                <ul class=\\\"list-group list-group-flush \\\">\\n                    <li *ngFor=\\\"let list of Model.PlanExercise\\\"\\n                        [ngClass]=\\\"{ 'list-group-item-success': list.Chosen }\\\"\\n                        class=\\\"list-group-item d-flex justify-content-between align-items-center \\\">\\n                        {{list.Text}}\\n                        <button (click)=\\\"doneExercise($event, list)\\\"\\n                                class=\\\"btn btn-sm btn-primary\\\">\\n                                Done\\n                        </button>\\n                    </li>\\n                </ul>\\n            </div>\\n            \\n    </div>\\n\\n\\n\\n\\n<!-- if profile is saved and disappear, display plan to choose-->\\n    <div class=\\\"col-md-6\\\">\\n        <!-- Exercise Plan-->\\n        <div class=\\\"card tracking\\\" *ngIf=\\\"finishProfile\\\">\\n            <div class=\\\"card-header\\\">\\n            You achieved..\\n            </div>\\n            <ul class=\\\"list-group list-group-flush \\\">\\n                <li *ngFor= \\\"let choice of Model.DoneExerciseList\\\" (click)=\\\"submitWorkout($event, choice.Text)\\\"\\n                    class=\\\"list-group-item d-flex justify-content-between align-items-center \\\">\\n                    {{choice.Text}}\\n                    <i *ngFor= \\\"let time of Model.DoneExerciseList\\\" class=\\\"badge float-right\\\" class =\\\"badge-info\\\">\\n                        {{time.WorkoutMinute}}\\n                    </i>\\n                </li>\\n            </ul>\\n            <div class=\\\"card-body\\\">\\n                <i *ngFor= \\\"let time of Model.Person\\\">\\n                    Your Total Workout Time: {{time.TotalWorkout}} minutes\\n                </i>\\n            </div>\\n        </div><!-- Exercise Plan end-->\\n    </div>\\n</div><!-- row end -->\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/fit/fit.component.html\n// module id = ./src/app/fit/fit.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Http } from \"@angular/http\";\nimport {Fit, User, Exercise, Info, Different, WorkoutList } from '../models/exercise';\n\n@Component({\n  selector: 'app-fit',\n  templateUrl: './fit.component.html',\n  styleUrls: ['./fit.component.css']\n})\nexport class FitComponent implements OnInit {\n\n    Model = new Fit();\n    Me: User;\n    Workout: Exercise;\n    DisplayProfile: Info;\n    GetExercise: WorkoutList;  \n    \n    logInName: string;\n    signIn: boolean = false;\n    finishProfile: boolean = false;\n\n    private _api = \"http://localhost:8080/fit\";\n\n  constructor(private http: Http) {\n    setInterval(()=> this.refresh(), 1000)\n  }\n\n  ngOnInit() {\n  }\n\n  refresh(){\n    this.http.get(this._api + \"/state\")\n        .subscribe(data=> this.Model = data.json())\n  }\n\n  submitWorkout(e: MouseEvent, text: string){\n    console.log('submitting workout list');\n    e.preventDefault();\n\n    this.http.post(this._api + \"/exercise\", { Text: text, UserId: this.Me.Name })\n        .subscribe();\n  }\n\n  doneExercise(e: MouseEvent, plan: Exercise){\n    console.log('done exercise');\n    e.preventDefault();\n    this.http.post(this._api + \"/exercise/choose\", { Text: plan.Text, UserId: this.Me.Name })\n        .subscribe(data => this.Workout = {Text: plan.Text, UserId: this.Me.Name, Chosen: true});\n  }\n\n\n  login(name: string){\n    console.log('log in successful');\n    this.http.get(this._api + \"/exercise\", { params : { userId: name } })\n    .subscribe(data=> this.Me =  {Name: name} )\n    this.logInName = name;\n    this.signIn = !this.signIn;\n    this.giveExerciseList(name);\n  }\n \n  giveExerciseList(name: string){\n    console.log('giveExerciseList executed');\n    this.http.get(this._api + \"/exercise/getList\", { params: { userId: name }})\n    .subscribe(data => this.GetExercise = { List: data.json()});\n  }\n\n  /*\n  differentUser(name: string){\n    this.http.get(this._api + \"/exercise/share\", { params : { userId: name } })\n    .subscribe(data=> this.Others =  {Name: name} )\n  }\n*/\n  profileAdd(age: number, weight: number, height: number, goalWeight: number ){\n    this.finishProfile = !this.finishProfile;\n    const goalBmiCalculate = this.calculateBMI(goalWeight, height);\n    const bmiCalculate = this.calculateBMI(weight, height);\n    this.http.post(this._api + \"/exercise/profile\", {Age: age, Weight: weight, Height: height, GoalWeight: goalWeight,\n      BMI: bmiCalculate, GoalBMI: goalBmiCalculate , UserId: this.Me.Name})\n    .subscribe(data => this.DisplayProfile = {Age: age, Weight: weight, Height: height, GoalWeight: goalWeight,\n      BMI: bmiCalculate, GoalBMI: goalBmiCalculate});\n    }\n    \n  calculateBMI(weight: number, height: number){\n    return Math.round((weight / height / height * 10000) * 100) / 100;\n    }\n    \n\n    \n    \n  MyPlanExercise = () => this.Model.PlanExercise.find( x => x.UserId == this.Me.Name );\n  ChosenExercise = () => this.Model.PlanExercise.find( x => x.Chosen );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/fit/fit.component.ts","module.exports = \".btn{\\n    margin-top: 10px;\\n}\\n\\n.card {\\n    padding: 0.5rem;\\n    \\n}\\n\\n.add-button {\\n    \\n    \\n    display:block;\\n    width:70px;\\n    height:70px;\\n    border: .5px solid grey;\\n    border-radius: 50%;\\n    color:grey;\\n    text-align: center;\\n    text-decoration:none;\\n    background: white;\\n    font-size: 15px;\\n    font-weight: bold;\\n    \\n    \\n}\\n\\n.add-button:hover {\\n    cursor: pointer;\\n    border: .5px solid darkcyan;\\n    color: darkcyan;\\n}\\n\\n.center{\\n    margin: 0 auto;\\n    max-width: 100%;\\n    width: 100px;\\n    padding: 1rem;\\n}\\n\\n.already{\\n    font-size: 10px;\\n    color: chocolate;\\n\\n}\\n\\n.tracking{\\n    margin-left: 5px;\\n    margin-right: 5px;\\n  \\n}\\n\\n.list{\\n    list-style-type: none;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<!--Need to find health info database api-->\\n<!-- <div class=\\\"card\\\">\\n    <img class=\\\"card-img-top card-img-bottom\\\" *ngIf=\\\"Model.HealthInfo\\\" [src]=\\\"Model.HealthInfo.url\\\" /> \\n    <div class = \\\"card-img-overlay\\\" style=\\\"text-align: center\\\">\\n      <button class=\\\"btn btn-success btn-lg\\\" (click)=\\\"getHealthInfo($event)\\\">\\n              Get Health Information\\n      </button>\\n    </div>\\n</div> \\n -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Http } from \"@angular/http\";\nimport {Fit, User, Exercise, Info } from '../models/exercise';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  Model = new Fit();\n\n  private _api = \"http://localhost:8080/fit\";\n\n  constructor(private http: Http) {\n    setInterval(()=> this.refresh(), 1000)\n  }\n\n  \n  ngOnInit() {\n  }\n\n  refresh(){\n    this.http.get(this._api + \"/state\")\n        .subscribe(data=> this.Model = data.json())\n  }\n  /** Need to find health info database api\n   getHealthInfo(e: MouseEvent){\n     this.http.post(this._api + \"/exercise/info\", {})\n     .subscribe();\n   }\n*/\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \"#messages {\\n    padding-top: 0.5rem;\\n    padding-left: 0.2rem;\\n}\\n\\n.button {\\n    margin-left: 5px;\\n    color: white;\\n    font-weight: bold;\\n    float: right;\\n    font-size: 22px;\\n    line-height: 20px;\\n    cursor: pointer;\\n    -webkit-transition: 0.3s;\\n    transition: 0.3s;\\n}\\n\\n.button:hover {\\n    color: black;\\n    cursor: pointer;\\n}\\n\\n.alert{\\n    padding: 10px;\\n    background-color: lightseagreen;\\n    color: white;\\n    margin-bottom: 15px;\\n}\\n\\n.msg{\\n    list-style-type: none;\\n    padding-top: 0.2rem;\\n    padding-left: 0.2rem;\\n    padding-bottom: 0.2rem;\\n}\\n\\nh3{\\n    text-align: center;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/messages/messages.component.css\n// module id = ./src/app/messages/messages.component.css\n// module chunks = main","module.exports = \"<div id=\\\"messages\\\">\\n  <div class=\\\"alert alert-success\\\">\\n    <!-- Binding-->\\n    <span class=\\\"button\\\" onclick=\\\"this.parentElement.style.display='none';\\\"> <!-- javascript-->\\n      &times;\\n    </span>\\n    <h3>Track your Exercise!</h3>\\n    \\n    <ul class = \\\"msg\\\">\\n      <li *ngFor =\\\"let msg of Messages\\\">{{msg}}</li>\\n    </ul>\\n  </div><!-- Alert -->\\n</div><!--messages-->\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/messages/messages.component.html\n// module id = ./src/app/messages/messages.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n    Messages: string[];\n  constructor() { \n    this.Messages = ['Complete your Profile before you begin to plan your workout.', 'You can choose your workout plan.'];\n  }\n\n  ngOnInit() {\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/messages/messages.component.ts","export class Fit {\n    \n    Person: User[] = [];\n    PlanExercise: Exercise[] = [];\n    Profile: Info[] =[];\n    DoneExerciseList: Exercise[] = [];\n    ExerciseList: WorkoutList[];  \n    /** Need to find health info database api\n    HealthInfo: {\n        url: string;\n    }\n    */\n \n \n}\n\nexport class WorkoutList{ \n    List: string[];\n}\nexport class Different{\n    Name: string;\n}\n\nexport class User {\n    Name: string;\n    //PlanExercise: Exercise[];   \n}\n\n\nexport class Exercise {\n    Text: string;\n    UserId: string;\n    Chosen: boolean = false;\n}\n\n\nexport class Info {\n    Age: number;\n    Weight: number;\n    Height: number;\n    GoalWeight: number;\n    BMI: number;\n    GoalBMI: number;\n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/exercise.ts","module.exports = \".navbar {\\n    padding: 0 1rem;\\n  }\\n  \\n  .nav-back{\\n    background-color: teal;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/nav/nav.component.css\n// module id = ./src/app/nav/nav.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-dark nav-back\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Fitness Tracker</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n          <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" >Home <span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/fit\\\" routerLinkActive=\\\"active\\\" >Fitness</a>\\n          </li>\\n      </ul>\\n    </div>\\n  </div><!-- navbar container -->\\n</nav><!-- nav bar -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/nav/nav.component.html\n// module id = ./src/app/nav/nav.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/nav/nav.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}